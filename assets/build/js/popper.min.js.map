{"version":3,"sources":["popper.min.js"],"names":["global","factory","exports","module","define","amd","Popper","this","isBrowser","window","document","navigator","timeoutDuration","longerTimeoutBrowsers","i","length","userAgent","indexOf","debounce","Promise","fn","called","resolve","then","scheduled","setTimeout","isFunction","functionToCheck","toString","call","getStyleComputedProperty","element","property","nodeType","css","ownerDocument","defaultView","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","body","_getStyleComputedProp","overflow","overflowX","overflowY","test","getReferenceNode","reference","referenceNode","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","version","getOffsetParent","documentElement","noOffsetParent","offsetParent","nextElementSibling","getRoot","node","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","firstElementChild","isOffsetContainer","element1root","getScroll","upperSide","arguments","undefined","html","scrollingElement","getBordersSize","styles","axis","sideA","sideB","parseFloat","getSize","computedStyle","Math","max","parseInt","getWindowSizes","height","width","createClass","Constructor","protoProps","staticProps","defineProperties","prototype","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","obj","value","_extends","assign","source","hasOwnProperty","getClientRect","offsets","right","left","bottom","top","getBoundingClientRect","rect","scrollTop","scrollLeft","e","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","children","parent","fixedPosition","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","subtract","modifier","includeScroll","getFixedPositionOffsetParent","parentElement","el","getBoundaries","popper","padding","boundariesElement","boundaries","excludeScroll","relativeOffset","innerWidth","innerHeight","getViewportOffsetRectRelativeToArtbitraryNode","boundariesNode","isFixed","_getWindowSizes","isPaddingNumber","computeAutoPlacement","placement","refRect","rects","sortedAreas","keys","map","area","_ref","getArea","sort","a","b","filteredAreas","filter","_ref2","computedPlacement","variation","split","getReferenceOffsets","state","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","Array","runModifiers","modifiers","data","ends","slice","prop","findIndex","cur","match","forEach","console","warn","enabled","isModifierEnabled","modifierName","some","name","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","style","getWindow","setupEventListeners","options","updateBound","addEventListener","passive","scrollElement","attachToScrollParents","event","callback","scrollParents","isBody","push","eventsEnabled","disableEventListeners","cancelAnimationFrame","scheduleUpdate","removeEventListener","removeEventListeners","isNumeric","n","isNaN","isFinite","setStyles","unit","getRoundedOffsets","shouldRound","noRound","v","_data$offsets","round","floor","referenceWidth","popperWidth","isVertical","isVariation","horizontalToInteger","verticalToInteger","isFirefox","isModifierRequired","requestingName","requestedName","requesting","isRequired","_requesting","requested","placements","validPlacements","clockwise","counter","index","concat","reverse","BEHAVIORS","parseOffset","offset","basePlacement","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","str","toValue","index2","Defaults","positionFixed","removeOnDestroy","onCreate","onUpdate","shift","shiftvariation","side","shiftOffsets","preventOverflow","instance","transformProp","popperStyles","transform","priority","primary","escapeWithReference","secondary","min","keepTogether","opSide","arrow","_data$offsets$arrow","arrowElement","querySelector","len","sideCapitalized","toLowerCase","altSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","flip","flipped","originalPlacement","placementOpposite","flipOrder","behavior","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flipVariations","flippedVariationByContent","flipVariationsByContent","flippedVariation","getOppositeVariation","inner","subtractLength","hide","bound","attributes","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","position","devicePixelRatio","prefixedProperty","willChange","invertTop","invertLeft","x-placement","arrowStyles","applyStyle","setAttribute","removeAttribute","setAttributes","onLoad","modifierOptions","isDestroyed","isCreated","removeChild","_this","TypeError","classCallCheck","requestAnimationFrame","update","bind","jquery","enableEventListeners","Utils","PopperUtils"],"mappings":"CAyBC,SAAUA,EAAQC,GACC,iBAAZC,SAA0C,oBAAXC,OAAyBA,OAAOD,QAAUD,IAC9D,mBAAXG,QAAyBA,OAAOC,IAAMD,OAAOH,GACnDD,EAAOM,OAASL,IAHlB,CAIEM,KAAM,WAAe,aAEvB,IAAIC,EAA8B,oBAAXC,QAA8C,oBAAbC,UAAiD,oBAAdC,UAEvFC,EAAkB,WAEpB,IADA,IAAIC,EAAwB,CAAC,OAAQ,UAAW,WACvCC,EAAI,EAAGA,EAAID,EAAsBE,OAAQD,GAAK,EACrD,GAAIN,GAAsE,GAAzDG,UAAUK,UAAUC,QAAQJ,EAAsBC,IACjE,OAAO,EAGX,OAAO,EAPa,GAqCtB,IAWII,EAXqBV,GAAaC,OAAOU,QA3B7C,SAA2BC,GACzB,IAAIC,GAAS,EACb,OAAO,WACDA,IAGJA,GAAS,EACTZ,OAAOU,QAAQG,UAAUC,KAAK,WAC5BF,GAAS,EACTD,SAKN,SAAsBA,GACpB,IAAII,GAAY,EAChB,OAAO,WACAA,IACHA,GAAY,EACZC,WAAW,WACTD,GAAY,EACZJ,KACCR,MAyBT,SAASc,EAAWC,GAElB,OAAOA,GAA8D,sBADvD,GACoBC,SAASC,KAAKF,GAUlD,SAASG,EAAyBC,EAASC,GACzC,GAAyB,IAArBD,EAAQE,SACV,MAAO,GAGT,IACIC,EADSH,EAAQI,cAAcC,YAClBC,iBAAiBN,EAAS,MAC3C,OAAOC,EAAWE,EAAIF,GAAYE,EAUpC,SAASI,EAAcP,GACrB,MAAyB,SAArBA,EAAQQ,SACHR,EAEFA,EAAQS,YAAcT,EAAQU,KAUvC,SAASC,EAAgBX,GAEvB,IAAKA,EACH,OAAOrB,SAASiC,KAGlB,OAAQZ,EAAQQ,UACd,IAAK,OACL,IAAK,OACH,OAAOR,EAAQI,cAAcQ,KAC/B,IAAK,YACH,OAAOZ,EAAQY,KAKnB,IAAIC,EAAwBd,EAAyBC,GACjDc,EAAWD,EAAsBC,SACjCC,EAAYF,EAAsBE,UAClCC,EAAYH,EAAsBG,UAEtC,MAAI,wBAAwBC,KAAKH,EAAWE,EAAYD,GAC/Cf,EAGFW,EAAgBJ,EAAcP,IAUvC,SAASkB,EAAiBC,GACxB,OAAOA,GAAaA,EAAUC,cAAgBD,EAAUC,cAAgBD,EAG1E,IAAIE,EAAS5C,MAAgBC,OAAO4C,uBAAwB3C,SAAS4C,cACjEC,EAAS/C,GAAa,UAAUwC,KAAKrC,UAAUK,WASnD,SAASwC,EAAKC,GACZ,OAAgB,KAAZA,EACKL,EAEO,KAAZK,EACKF,EAEFH,GAAUG,EAUnB,SAASG,EAAgB3B,GACvB,IAAKA,EACH,OAAOrB,SAASiD,gBAQlB,IALA,IAAIC,EAAiBJ,EAAK,IAAM9C,SAASiC,KAAO,KAG5CkB,EAAe9B,EAAQ8B,cAAgB,KAEpCA,IAAiBD,GAAkB7B,EAAQ+B,oBAChDD,GAAgB9B,EAAUA,EAAQ+B,oBAAoBD,aAGxD,IAAItB,EAAWsB,GAAgBA,EAAatB,SAE5C,OAAKA,GAAyB,SAAbA,GAAoC,SAAbA,GAMsB,IAA1D,CAAC,KAAM,KAAM,SAAStB,QAAQ4C,EAAatB,WAA2E,WAAvDT,EAAyB+B,EAAc,YACjGH,EAAgBG,GAGlBA,EATE9B,EAAUA,EAAQI,cAAcwB,gBAAkBjD,SAASiD,gBA4BtE,SAASI,EAAQC,GACf,OAAwB,OAApBA,EAAKxB,WACAuB,EAAQC,EAAKxB,YAGfwB,EAWT,SAASC,EAAuBC,EAAUC,GAExC,KAAKD,GAAaA,EAASjC,UAAakC,GAAaA,EAASlC,UAC5D,OAAOvB,SAASiD,gBAIlB,IAAIS,EAAQF,EAASG,wBAAwBF,GAAYG,KAAKC,4BAC1DC,EAAQJ,EAAQF,EAAWC,EAC3BM,EAAML,EAAQD,EAAWD,EAGzBQ,EAAQhE,SAASiE,cACrBD,EAAME,SAASJ,EAAO,GACtBE,EAAMG,OAAOJ,EAAK,GAClB,IAAIK,EAA0BJ,EAAMI,wBAIpC,GAAIZ,IAAaY,GAA2BX,IAAaW,GAA2BN,EAAMO,SAASN,GACjG,OApDJ,SAA2B1C,GACzB,IAAIQ,EAAWR,EAAQQ,SAEvB,MAAiB,SAAbA,IAGgB,SAAbA,GAAuBmB,EAAgB3B,EAAQiD,qBAAuBjD,GA8CvEkD,CAAkBH,GACbA,EAGFpB,EAAgBoB,GAIzB,IAAII,EAAenB,EAAQG,GAC3B,OAAIgB,EAAazC,KACRwB,EAAuBiB,EAAazC,KAAM0B,GAE1CF,EAAuBC,EAAUH,EAAQI,GAAU1B,MAY9D,SAAS0C,EAAUpD,EAAnB,GACE,IAEIqD,EAAqB,SAFK,EAAnBC,UAAUtE,aAA+BuE,IADtD,EAAA,EACiF,OAE9C,YAAc,aAC3C/C,EAAWR,EAAQQ,SAEvB,GAAiB,SAAbA,GAAoC,SAAbA,EAM3B,OAAOR,EAAQqD,GALb,IAAIG,EAAOxD,EAAQI,cAAcwB,gBAEjC,OADuB5B,EAAQI,cAAcqD,kBAAoBD,GACzCH,GAsC5B,SAASK,EAAeC,EAAQC,GAC9B,IAAIC,EAAiB,MAATD,EAAe,OAAS,MAChCE,EAAkB,QAAVD,EAAmB,QAAU,SAEzC,OAAOE,WAAWJ,EAAO,SAAWE,EAAQ,SAAU,IAAME,WAAWJ,EAAO,SAAWG,EAAQ,SAAU,IAG7G,SAASE,EAAQJ,EAAMhD,EAAM4C,EAAMS,GACjC,OAAOC,KAAKC,IAAIvD,EAAK,SAAWgD,GAAOhD,EAAK,SAAWgD,GAAOJ,EAAK,SAAWI,GAAOJ,EAAK,SAAWI,GAAOJ,EAAK,SAAWI,GAAOnC,EAAK,IAAM2C,SAASZ,EAAK,SAAWI,IAASQ,SAASH,EAAc,UAAqB,WAATL,EAAoB,MAAQ,UAAYQ,SAASH,EAAc,UAAqB,WAATL,EAAoB,SAAW,WAAa,GAG5U,SAASS,EAAe1F,GACtB,IAAIiC,EAAOjC,EAASiC,KAChB4C,EAAO7E,EAASiD,gBAChBqC,EAAgBxC,EAAK,KAAOnB,iBAAiBkD,GAEjD,MAAO,CACLc,OAAQN,EAAQ,SAAUpD,EAAM4C,EAAMS,GACtCM,MAAOP,EAAQ,QAASpD,EAAM4C,EAAMS,IAIxC,IAMIO,EAWK,SAAUC,EAAaC,EAAYC,GAGxC,OAFID,GAAYE,EAAiBH,EAAYI,UAAWH,GACpDC,GAAaC,EAAiBH,EAAaE,GACxCF,GAbT,SAASG,EAAiBE,EAAQC,GAChC,IAAK,IAAIhG,EAAI,EAAGA,EAAIgG,EAAM/F,OAAQD,IAAK,CACrC,IAAIiG,EAAaD,EAAMhG,GACvBiG,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDC,OAAOC,eAAeP,EAAQE,EAAWM,IAAKN,IAe/B,SAAjBK,EAA2BE,EAAKD,EAAKE,GAYvC,OAXIF,KAAOC,EACTH,OAAOC,eAAeE,EAAKD,EAAK,CAC9BE,MAAOA,EACPP,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZI,EAAID,GAAOE,EAGND,EAZT,IAeIE,EAAWL,OAAOM,QAAU,SAAUZ,GACxC,IAAK,IAAI/F,EAAI,EAAGA,EAAIuE,UAAUtE,OAAQD,IAAK,CACzC,IAAI4G,EAASrC,UAAUvE,GAEvB,IAAK,IAAIuG,KAAOK,EACVP,OAAOP,UAAUe,eAAe9F,KAAK6F,EAAQL,KAC/CR,EAAOQ,GAAOK,EAAOL,IAK3B,OAAOR,GAUT,SAASe,EAAcC,GACrB,OAAOL,EAAS,GAAIK,EAAS,CAC3BC,MAAOD,EAAQE,KAAOF,EAAQvB,MAC9B0B,OAAQH,EAAQI,IAAMJ,EAAQxB,SAWlC,SAAS6B,EAAsBnG,GAC7B,IAAIoG,EAAO,GAKX,IACE,GAAI3E,EAAK,IAAK,CACZ2E,EAAOpG,EAAQmG,wBACf,IAAIE,EAAYjD,EAAUpD,EAAS,OAC/BsG,EAAalD,EAAUpD,EAAS,QACpCoG,EAAKF,KAAOG,EACZD,EAAKJ,MAAQM,EACbF,EAAKH,QAAUI,EACfD,EAAKL,OAASO,OAEdF,EAAOpG,EAAQmG,wBAEjB,MAAOI,IAET,IAAIC,EAAS,CACXR,KAAMI,EAAKJ,KACXE,IAAKE,EAAKF,IACV3B,MAAO6B,EAAKL,MAAQK,EAAKJ,KACzB1B,OAAQ8B,EAAKH,OAASG,EAAKF,KAIzBO,EAA6B,SAArBzG,EAAQQ,SAAsB6D,EAAerE,EAAQI,eAAiB,GAC9EmE,EAAQkC,EAAMlC,OAASvE,EAAQ0G,aAAeF,EAAOjC,MACrDD,EAASmC,EAAMnC,QAAUtE,EAAQ2G,cAAgBH,EAAOlC,OAExDsC,EAAiB5G,EAAQ6G,YAActC,EACvCuC,EAAgB9G,EAAQ+G,aAAezC,EAI3C,GAAIsC,GAAkBE,EAAe,CACnC,IAAInD,EAAS5D,EAAyBC,GACtC4G,GAAkBlD,EAAeC,EAAQ,KACzCmD,GAAiBpD,EAAeC,EAAQ,KAExC6C,EAAOjC,OAASqC,EAChBJ,EAAOlC,QAAUwC,EAGnB,OAAOjB,EAAcW,GAGvB,SAASQ,EAAqCC,EAAUC,EAAxD,GACE,IAAIC,EAAmC,EAAnB7D,UAAUtE,aAA+BuE,IAD/D,GAAA,EAGM/B,EAASC,EAAK,IACd2F,EAA6B,SAApBF,EAAO1G,SAChB6G,EAAelB,EAAsBc,GACrCK,EAAanB,EAAsBe,GACnCK,EAAe5G,EAAgBsG,GAE/BtD,EAAS5D,EAAyBmH,GAClCM,EAAiBzD,WAAWJ,EAAO6D,eAAgB,IACnDC,EAAkB1D,WAAWJ,EAAO8D,gBAAiB,IAGrDN,GAAiBC,IACnBE,EAAWpB,IAAMhC,KAAKC,IAAImD,EAAWpB,IAAK,GAC1CoB,EAAWtB,KAAO9B,KAAKC,IAAImD,EAAWtB,KAAM,IAE9C,IAAIF,EAAUD,EAAc,CAC1BK,IAAKmB,EAAanB,IAAMoB,EAAWpB,IAAMsB,EACzCxB,KAAMqB,EAAarB,KAAOsB,EAAWtB,KAAOyB,EAC5ClD,MAAO8C,EAAa9C,MACpBD,OAAQ+C,EAAa/C,SASvB,GAPAwB,EAAQ4B,UAAY,EACpB5B,EAAQ6B,WAAa,GAMhBnG,GAAU4F,EAAQ,CACrB,IAAIM,EAAY3D,WAAWJ,EAAO+D,UAAW,IACzCC,EAAa5D,WAAWJ,EAAOgE,WAAY,IAE/C7B,EAAQI,KAAOsB,EAAiBE,EAChC5B,EAAQG,QAAUuB,EAAiBE,EACnC5B,EAAQE,MAAQyB,EAAkBE,EAClC7B,EAAQC,OAAS0B,EAAkBE,EAGnC7B,EAAQ4B,UAAYA,EACpB5B,EAAQ6B,WAAaA,EAOvB,OAJInG,IAAW2F,EAAgBD,EAAOlE,SAASuE,GAAgBL,IAAWK,GAA0C,SAA1BA,EAAa/G,YACrGsF,EA1NJ,SAAuBM,EAAMpG,EAA7B,GACE,IAAI4H,EAA8B,EAAnBtE,UAAUtE,aAA+BuE,IAD1D,GAAA,EAGM8C,EAAYjD,EAAUpD,EAAS,OAC/BsG,EAAalD,EAAUpD,EAAS,QAChC6H,EAAWD,GAAY,EAAI,EAK/B,OAJAxB,EAAKF,KAAOG,EAAYwB,EACxBzB,EAAKH,QAAUI,EAAYwB,EAC3BzB,EAAKJ,MAAQM,EAAauB,EAC1BzB,EAAKL,OAASO,EAAauB,EACpBzB,EAgNK0B,CAAchC,EAASoB,IAG5BpB,EAuDT,SAASiC,EAA6B/H,GAEpC,IAAKA,IAAYA,EAAQgI,eAAiBvG,IACxC,OAAO9C,SAASiD,gBAGlB,IADA,IAAIqG,EAAKjI,EAAQgI,cACVC,GAAoD,SAA9ClI,EAAyBkI,EAAI,cACxCA,EAAKA,EAAGD,cAEV,OAAOC,GAAMtJ,SAASiD,gBAcxB,SAASsG,EAAcC,EAAQhH,EAAWiH,EAASC,EAAnD,GACE,IAAIlB,EAAmC,EAAnB7D,UAAUtE,aAA+BuE,IAD/D,GAAA,EAKM+E,EAAa,CAAEpC,IAAK,EAAGF,KAAM,GAC7BlE,EAAeqF,EAAgBY,EAA6BI,GAAUjG,EAAuBiG,EAAQjH,EAAiBC,IAG1H,GAA0B,aAAtBkH,EACFC,EArFJ,SAAuDtI,EAAvD,GACE,IAAIuI,EAAmC,EAAnBjF,UAAUtE,aAA+BuE,IAD/D,GAAA,EAGMC,EAAOxD,EAAQI,cAAcwB,gBAC7B4G,EAAiBxB,EAAqChH,EAASwD,GAC/De,EAAQL,KAAKC,IAAIX,EAAKkD,YAAahI,OAAO+J,YAAc,GACxDnE,EAASJ,KAAKC,IAAIX,EAAKmD,aAAcjI,OAAOgK,aAAe,GAE3DrC,EAAakC,EAAkC,EAAlBnF,EAAUI,GACvC8C,EAAciC,EAA0C,EAA1BnF,EAAUI,EAAM,QASlD,OAAOqC,EAPM,CACXK,IAAKG,EAAYmC,EAAetC,IAAMsC,EAAed,UACrD1B,KAAMM,EAAakC,EAAexC,KAAOwC,EAAeb,WACxDpD,MAAOA,EACPD,OAAQA,IAsEKqE,CAA8C7G,EAAcqF,OACpE,CAEL,IAAIyB,OAAiB,EACK,iBAAtBP,EAE8B,UADhCO,EAAiBjI,EAAgBJ,EAAcY,KAC5BX,WACjBoI,EAAiBT,EAAO/H,cAAcwB,iBAGxCgH,EAD+B,WAAtBP,EACQF,EAAO/H,cAAcwB,gBAErByG,EAGnB,IAAIvC,EAAUkB,EAAqC4B,EAAgB9G,EAAcqF,GAGjF,GAAgC,SAA5ByB,EAAepI,UA1EvB,SAASqI,EAAQ7I,GACf,IAAIQ,EAAWR,EAAQQ,SACvB,GAAiB,SAAbA,GAAoC,SAAbA,EACzB,OAAO,EAET,GAAsD,UAAlDT,EAAyBC,EAAS,YACpC,OAAO,EAET,IAAIS,EAAaF,EAAcP,GAC/B,QAAKS,GAGEoI,EAAQpI,GA8D8BoI,CAAQ/G,GAWjDwG,EAAaxC,MAXmD,CAChE,IAAIgD,EAAkBzE,EAAe8D,EAAO/H,eACxCkE,EAASwE,EAAgBxE,OACzBC,EAAQuE,EAAgBvE,MAE5B+D,EAAWpC,KAAOJ,EAAQI,IAAMJ,EAAQ4B,UACxCY,EAAWrC,OAAS3B,EAASwB,EAAQI,IACrCoC,EAAWtC,MAAQF,EAAQE,KAAOF,EAAQ6B,WAC1CW,EAAWvC,MAAQxB,EAAQuB,EAAQE,MASvC,IAAI+C,EAAqC,iBADzCX,EAAUA,GAAW,GAOrB,OALAE,EAAWtC,MAAQ+C,EAAkBX,EAAUA,EAAQpC,MAAQ,EAC/DsC,EAAWpC,KAAO6C,EAAkBX,EAAUA,EAAQlC,KAAO,EAC7DoC,EAAWvC,OAASgD,EAAkBX,EAAUA,EAAQrC,OAAS,EACjEuC,EAAWrC,QAAU8C,EAAkBX,EAAUA,EAAQnC,QAAU,EAE5DqC,EAmBT,SAASU,EAAqBC,EAAWC,EAASf,EAAQhH,EAAWkH,EAArE,GACE,IAAID,EAA6B,EAAnB9E,UAAUtE,aAA+BuE,IADzD,EAAA,EACoF,EAElF,IAAmC,IAA/B0F,EAAU/J,QAAQ,QACpB,OAAO+J,EAGT,IAAIX,EAAaJ,EAAcC,EAAQhH,EAAWiH,EAASC,GAEvDc,EAAQ,CACVjD,IAAK,CACH3B,MAAO+D,EAAW/D,MAClBD,OAAQ4E,EAAQhD,IAAMoC,EAAWpC,KAEnCH,MAAO,CACLxB,MAAO+D,EAAWvC,MAAQmD,EAAQnD,MAClCzB,OAAQgE,EAAWhE,QAErB2B,OAAQ,CACN1B,MAAO+D,EAAW/D,MAClBD,OAAQgE,EAAWrC,OAASiD,EAAQjD,QAEtCD,KAAM,CACJzB,MAAO2E,EAAQlD,KAAOsC,EAAWtC,KACjC1B,OAAQgE,EAAWhE,SAInB8E,EAAchE,OAAOiE,KAAKF,GAAOG,IAAI,SAAUhE,GACjD,OAAOG,EAAS,CACdH,IAAKA,GACJ6D,EAAM7D,GAAM,CACbiE,KAhDN,SAAiBC,GAIf,OAHYA,EAAKjF,MACJiF,EAAKlF,OA8CRmF,CAAQN,EAAM7D,QAErBoE,KAAK,SAAUC,EAAGC,GACnB,OAAOA,EAAEL,KAAOI,EAAEJ,OAGhBM,EAAgBT,EAAYU,OAAO,SAAUC,GAC/C,IAAIxF,EAAQwF,EAAMxF,MACdD,EAASyF,EAAMzF,OACnB,OAAOC,GAAS4D,EAAOzB,aAAepC,GAAU6D,EAAOxB,eAGrDqD,EAA2C,EAAvBH,EAAc7K,OAAa6K,EAAc,GAAGvE,IAAM8D,EAAY,GAAG9D,IAErF2E,EAAYhB,EAAUiB,MAAM,KAAK,GAErC,OAAOF,GAAqBC,EAAY,IAAMA,EAAY,IAa5D,SAASE,EAAoBC,EAAOjC,EAAQhH,EAA5C,GACE,IAAIgG,EAAmC,EAAnB7D,UAAUtE,aAA+BuE,IAD/D,EAAA,EAC0F,KAGxF,OAAOyD,EAAqC7F,EADnBgG,EAAgBY,EAA6BI,GAAUjG,EAAuBiG,EAAQjH,EAAiBC,IACrDgG,GAU7E,SAASkD,EAAcrK,GACrB,IACI2D,EADS3D,EAAQI,cAAcC,YACfC,iBAAiBN,GACjCsK,EAAIvG,WAAWJ,EAAO+D,WAAa,GAAK3D,WAAWJ,EAAO4G,cAAgB,GAC1EC,EAAIzG,WAAWJ,EAAOgE,YAAc,GAAK5D,WAAWJ,EAAO8G,aAAe,GAK9E,MAJa,CACXlG,MAAOvE,EAAQ6G,YAAc2D,EAC7BlG,OAAQtE,EAAQ+G,aAAeuD,GAYnC,SAASI,EAAqBzB,GAC5B,IAAI0B,EAAO,CAAE3E,KAAM,QAASD,MAAO,OAAQE,OAAQ,MAAOC,IAAK,UAC/D,OAAO+C,EAAU2B,QAAQ,yBAA0B,SAAUC,GAC3D,OAAOF,EAAKE,KAchB,SAASC,EAAiB3C,EAAQ4C,EAAkB9B,GAClDA,EAAYA,EAAUiB,MAAM,KAAK,GAGjC,IAAIc,EAAaX,EAAclC,GAG3B8C,EAAgB,CAClB1G,MAAOyG,EAAWzG,MAClBD,OAAQ0G,EAAW1G,QAIjB4G,GAAoD,IAA1C,CAAC,QAAS,QAAQhM,QAAQ+J,GACpCkC,EAAWD,EAAU,MAAQ,OAC7BE,EAAgBF,EAAU,OAAS,MACnCG,EAAcH,EAAU,SAAW,QACnCI,EAAwBJ,EAAqB,QAAX,SAStC,OAPAD,EAAcE,GAAYJ,EAAiBI,GAAYJ,EAAiBM,GAAe,EAAIL,EAAWK,GAAe,EAEnHJ,EAAcG,GADZnC,IAAcmC,EACeL,EAAiBK,GAAiBJ,EAAWM,GAE7CP,EAAiBL,EAAqBU,IAGhEH,EAYT,SAASM,EAAKC,EAAKC,GAEjB,OAAIC,MAAM7G,UAAU0G,KACXC,EAAID,KAAKE,GAIXD,EAAI1B,OAAO2B,GAAO,GAqC3B,SAASE,EAAaC,EAAWC,EAAMC,GAoBrC,YAnB8BvI,IAATuI,EAAqBF,EAAYA,EAAUG,MAAM,EA1BxE,SAAmBP,EAAKQ,EAAMxG,GAE5B,GAAIkG,MAAM7G,UAAUoH,UAClB,OAAOT,EAAIS,UAAU,SAAUC,GAC7B,OAAOA,EAAIF,KAAUxG,IAKzB,IAAI2G,EAAQZ,EAAKC,EAAK,SAAUjG,GAC9B,OAAOA,EAAIyG,KAAUxG,IAEvB,OAAOgG,EAAItM,QAAQiN,GAcsDF,CAAUL,EAAW,OAAQE,KAEvFM,QAAQ,SAAUvE,GAC3BA,EAAmB,UAErBwE,QAAQC,KAAK,yDAEf,IAAIjN,EAAKwI,EAAmB,UAAKA,EAASxI,GACtCwI,EAAS0E,SAAW5M,EAAWN,KAIjCwM,EAAK/F,QAAQqC,OAAStC,EAAcgG,EAAK/F,QAAQqC,QACjD0D,EAAK/F,QAAQ3E,UAAY0E,EAAcgG,EAAK/F,QAAQ3E,WAEpD0K,EAAOxM,EAAGwM,EAAMhE,MAIbgE,EA8DT,SAASW,EAAkBZ,EAAWa,GACpC,OAAOb,EAAUc,KAAK,SAAUlD,GAC9B,IAAImD,EAAOnD,EAAKmD,KAEhB,OADcnD,EAAK+C,SACDI,IAASF,IAW/B,SAASG,EAAyB3M,GAIhC,IAHA,IAAI4M,EAAW,EAAC,EAAO,KAAM,SAAU,MAAO,KAC1CC,EAAY7M,EAAS8M,OAAO,GAAGC,cAAgB/M,EAAS8L,MAAM,GAEzDhN,EAAI,EAAGA,EAAI8N,EAAS7N,OAAQD,IAAK,CACxC,IAAIkO,EAASJ,EAAS9N,GAClBmO,EAAUD,EAAS,GAAKA,EAASH,EAAY7M,EACjD,QAA4C,IAAjCtB,SAASiC,KAAKuM,MAAMD,GAC7B,OAAOA,EAGX,OAAO,KAsCT,SAASE,EAAUpN,GACjB,IAAII,EAAgBJ,EAAQI,cAC5B,OAAOA,EAAgBA,EAAcC,YAAc3B,OAoBrD,SAAS2O,EAAoBlM,EAAWmM,EAASlD,EAAOmD,GAEtDnD,EAAMmD,YAAcA,EACpBH,EAAUjM,GAAWqM,iBAAiB,SAAUpD,EAAMmD,YAAa,CAAEE,SAAS,IAG9E,IAAIC,EAAgB/M,EAAgBQ,GAKpC,OA5BF,SAASwM,EAAsBpG,EAAcqG,EAAOC,EAAUC,GAC5D,IAAIC,EAAmC,SAA1BxG,EAAa/G,SACtBsE,EAASiJ,EAASxG,EAAanH,cAAcC,YAAckH,EAC/DzC,EAAO0I,iBAAiBI,EAAOC,EAAU,CAAEJ,SAAS,IAE/CM,GACHJ,EAAsBhN,EAAgBmE,EAAOrE,YAAamN,EAAOC,EAAUC,GAE7EA,EAAcE,KAAKlJ,GAgBnB6I,CAAsBD,EAAe,SAAUtD,EAAMmD,YAAanD,EAAM0D,eACxE1D,EAAMsD,cAAgBA,EACtBtD,EAAM6D,eAAgB,EAEf7D,EA6CT,SAAS8D,IACH1P,KAAK4L,MAAM6D,gBACbE,qBAAqB3P,KAAK4P,gBAC1B5P,KAAK4L,MA3BT,SAA8BjJ,EAAWiJ,GAcvC,OAZAgD,EAAUjM,GAAWkN,oBAAoB,SAAUjE,EAAMmD,aAGzDnD,EAAM0D,cAAc1B,QAAQ,SAAUtH,GACpCA,EAAOuJ,oBAAoB,SAAUjE,EAAMmD,eAI7CnD,EAAMmD,YAAc,KACpBnD,EAAM0D,cAAgB,GACtB1D,EAAMsD,cAAgB,KACtBtD,EAAM6D,eAAgB,EACf7D,EAaQkE,CAAqB9P,KAAK2C,UAAW3C,KAAK4L,QAW3D,SAASmE,EAAUC,GACjB,MAAa,KAANA,IAAaC,MAAM1K,WAAWyK,KAAOE,SAASF,GAWvD,SAASG,EAAU3O,EAAS2D,GAC1ByB,OAAOiE,KAAK1F,GAAQyI,QAAQ,SAAUJ,GACpC,IAAI4C,EAAO,IAEkE,IAAzE,CAAC,QAAS,SAAU,MAAO,QAAS,SAAU,QAAQ1P,QAAQ8M,IAAgBuC,EAAU5K,EAAOqI,MACjG4C,EAAO,MAET5O,EAAQmN,MAAMnB,GAAQrI,EAAOqI,GAAQ4C,IAkGzC,SAASC,EAAkBhD,EAAMiD,GAOjB,SAAVC,EAA2BC,GAC7B,OAAOA,EAPT,IAAIC,EAAgBpD,EAAK/F,QACrBqC,EAAS8G,EAAc9G,OACvBhH,EAAY8N,EAAc9N,UAC1B+N,EAAQhL,KAAKgL,MACbC,EAAQjL,KAAKiL,MAMbC,EAAiBF,EAAM/N,EAAUoD,OACjC8K,EAAcH,EAAM/G,EAAO5D,OAE3B+K,GAA4D,IAA/C,CAAC,OAAQ,SAASpQ,QAAQ2M,EAAK5C,WAC5CsG,GAA+C,IAAjC1D,EAAK5C,UAAU/J,QAAQ,KAIrCsQ,EAAuBV,EAAwBQ,GAAcC,GAH3CH,EAAiB,GAAMC,EAAc,EAGuCH,EAAQC,EAAjEJ,EACrCU,EAAqBX,EAAwBI,EAAVH,EAEvC,MAAO,CACL/I,KAAMwJ,EANWJ,EAAiB,GAAM,GAAKC,EAAc,GAAM,IAMtBE,GAAeT,EAAc3G,EAAOnC,KAAO,EAAImC,EAAOnC,MACjGE,IAAKuJ,EAAkBtH,EAAOjC,KAC9BD,OAAQwJ,EAAkBtH,EAAOlC,QACjCF,MAAOyJ,EAAoBrH,EAAOpC,QAItC,IAAI2J,EAAYjR,GAAa,WAAWwC,KAAKrC,UAAUK,WA8GvD,SAAS0Q,EAAmB/D,EAAWgE,EAAgBC,GACrD,IAAIC,EAAavE,EAAKK,EAAW,SAAUpC,GAEzC,OADWA,EAAKmD,OACAiD,IAGdG,IAAeD,GAAclE,EAAUc,KAAK,SAAU7E,GACxD,OAAOA,EAAS8E,OAASkD,GAAiBhI,EAAS0E,SAAW1E,EAASxF,MAAQyN,EAAWzN,QAG5F,IAAK0N,EAAY,CACf,IAAIC,EAAc,IAAMJ,EAAiB,IACrCK,EAAY,IAAMJ,EAAgB,IACtCxD,QAAQC,KAAK2D,EAAY,4BAA8BD,EAAc,4DAA8DA,EAAc,KAEnJ,OAAOD,EAoIT,IAAIG,EAAa,CAAC,aAAc,OAAQ,WAAY,YAAa,MAAO,UAAW,cAAe,QAAS,YAAa,aAAc,SAAU,eAAgB,WAAY,OAAQ,cAGhLC,EAAkBD,EAAWnE,MAAM,GAYvC,SAASqE,EAAUnH,EAAnB,GACE,IAAIoH,EAA6B,EAAnB/M,UAAUtE,aAA+BuE,IADzD,GAAA,EAGM+M,EAAQH,EAAgBjR,QAAQ+J,GAChCuC,EAAM2E,EAAgBpE,MAAMuE,EAAQ,GAAGC,OAAOJ,EAAgBpE,MAAM,EAAGuE,IAC3E,OAAOD,EAAU7E,EAAIgF,UAAYhF,EAGnC,IAAIiF,EACI,OADJA,EAES,YAFTA,EAGgB,mBAiMpB,SAASC,EAAYC,EAAQ1F,EAAeF,EAAkB6F,GAC5D,IAAI9K,EAAU,CAAC,EAAG,GAKd+K,GAA0D,IAA9C,CAAC,QAAS,QAAQ3R,QAAQ0R,GAItCE,EAAYH,EAAOzG,MAAM,WAAWZ,IAAI,SAAUyH,GACpD,OAAOA,EAAKC,SAKVC,EAAUH,EAAU5R,QAAQqM,EAAKuF,EAAW,SAAUC,GACxD,OAAgC,IAAzBA,EAAKG,OAAO,WAGjBJ,EAAUG,KAAiD,IAArCH,EAAUG,GAAS/R,QAAQ,MACnDmN,QAAQC,KAAK,gFAKf,IAAI6E,EAAa,cACbC,GAAmB,IAAbH,EAAiB,CAACH,EAAU/E,MAAM,EAAGkF,GAASV,OAAO,CAACO,EAAUG,GAAS/G,MAAMiH,GAAY,KAAM,CAACL,EAAUG,GAAS/G,MAAMiH,GAAY,IAAIZ,OAAOO,EAAU/E,MAAMkF,EAAU,KAAO,CAACH,GAqC9L,OAlCAM,EAAMA,EAAI9H,IAAI,SAAU+H,EAAIf,GAE1B,IAAIjF,GAAyB,IAAViF,GAAeO,EAAYA,GAAa,SAAW,QAClES,GAAoB,EACxB,OAAOD,EAGNE,OAAO,SAAU5H,EAAGC,GACnB,MAAwB,KAApBD,EAAEA,EAAE3K,OAAS,KAAwC,IAA3B,CAAC,IAAK,KAAKE,QAAQ0K,IAC/CD,EAAEA,EAAE3K,OAAS,GAAK4K,EAClB0H,GAAoB,EACb3H,GACE2H,GACT3H,EAAEA,EAAE3K,OAAS,IAAM4K,EACnB0H,GAAoB,EACb3H,GAEAA,EAAE4G,OAAO3G,IAEjB,IAEFN,IAAI,SAAUkI,GACb,OAxGN,SAAiBA,EAAKnG,EAAaJ,EAAeF,GAEhD,IAAIb,EAAQsH,EAAIrF,MAAM,6BAClB3G,GAAS0E,EAAM,GACf0E,EAAO1E,EAAM,GAGjB,IAAK1E,EACH,OAAOgM,EAGT,GAA0B,IAAtB5C,EAAK1P,QAAQ,KAcV,MAAa,OAAT0P,GAA0B,OAATA,EAYnBpJ,GATM,OAAToJ,EACK1K,KAAKC,IAAIxF,SAASiD,gBAAgB+E,aAAcjI,OAAOgK,aAAe,GAEtExE,KAAKC,IAAIxF,SAASiD,gBAAgB8E,YAAahI,OAAO+J,YAAc,IAE/D,IAAMjD,EArBpB,IAAIxF,OAAU,EACd,OAAQ4O,GACN,IAAK,KACH5O,EAAUiL,EACV,MACF,IAAK,IACL,IAAK,KACL,QACEjL,EAAU+K,EAId,OADWlF,EAAc7F,GACbqL,GAAe,IAAM7F,EAgFxBiM,CAAQD,EAAKnG,EAAaJ,EAAeF,QAKhDqB,QAAQ,SAAUiF,EAAIf,GACxBe,EAAGjF,QAAQ,SAAU2E,EAAMW,GACrBnD,EAAUwC,KACZjL,EAAQwK,IAAUS,GAA2B,MAAnBM,EAAGK,EAAS,IAAc,EAAI,QAIvD5L,EA2OT,IAkWI6L,EAAW,CAKb1I,UAAW,SAMX2I,eAAe,EAMf3D,eAAe,EAOf4D,iBAAiB,EAQjBC,SAAU,aAUVC,SAAU,aAOVnG,UAnZc,CASdoG,MAAO,CAEL3P,MAAO,IAEPkK,SAAS,EAETlN,GA9HJ,SAAewM,GACb,IAAI5C,EAAY4C,EAAK5C,UACjB2H,EAAgB3H,EAAUiB,MAAM,KAAK,GACrC+H,EAAiBhJ,EAAUiB,MAAM,KAAK,GAG1C,GAAI+H,EAAgB,CAClB,IAAIhD,EAAgBpD,EAAK/F,QACrB3E,EAAY8N,EAAc9N,UAC1BgH,EAAS8G,EAAc9G,OAEvBmH,GAA2D,IAA9C,CAAC,SAAU,OAAOpQ,QAAQ0R,GACvCsB,EAAO5C,EAAa,OAAS,MAC7BjE,EAAciE,EAAa,QAAU,SAErC6C,EAAe,CACjB1P,MAAO4C,EAAe,GAAI6M,EAAM/Q,EAAU+Q,IAC1CxP,IAAK2C,EAAe,GAAI6M,EAAM/Q,EAAU+Q,GAAQ/Q,EAAUkK,GAAelD,EAAOkD,KAGlFQ,EAAK/F,QAAQqC,OAAS1C,EAAS,GAAI0C,EAAQgK,EAAaF,IAG1D,OAAOpG,IAgJP8E,OAAQ,CAENtO,MAAO,IAEPkK,SAAS,EAETlN,GA7RJ,SAAgBwM,EAAMrC,GACpB,IAAImH,EAASnH,EAAKmH,OACd1H,EAAY4C,EAAK5C,UACjBgG,EAAgBpD,EAAK/F,QACrBqC,EAAS8G,EAAc9G,OACvBhH,EAAY8N,EAAc9N,UAE1ByP,EAAgB3H,EAAUiB,MAAM,KAAK,GAErCpE,OAAU,EAsBd,OApBEA,EADEyI,GAAWoC,GACH,EAAEA,EAAQ,GAEVD,EAAYC,EAAQxI,EAAQhH,EAAWyP,GAG7B,SAAlBA,GACFzI,EAAOjC,KAAOJ,EAAQ,GACtBqC,EAAOnC,MAAQF,EAAQ,IACI,UAAlB8K,GACTzI,EAAOjC,KAAOJ,EAAQ,GACtBqC,EAAOnC,MAAQF,EAAQ,IACI,QAAlB8K,GACTzI,EAAOnC,MAAQF,EAAQ,GACvBqC,EAAOjC,KAAOJ,EAAQ,IACK,WAAlB8K,IACTzI,EAAOnC,MAAQF,EAAQ,GACvBqC,EAAOjC,KAAOJ,EAAQ,IAGxB+F,EAAK1D,OAASA,EACP0D,GAkQL8E,OAAQ,GAoBVyB,gBAAiB,CAEf/P,MAAO,IAEPkK,SAAS,EAETlN,GAlRJ,SAAyBwM,EAAMyB,GAC7B,IAAIjF,EAAoBiF,EAAQjF,mBAAqB1G,EAAgBkK,EAAKwG,SAASlK,QAK/E0D,EAAKwG,SAASlR,YAAckH,IAC9BA,EAAoB1G,EAAgB0G,IAMtC,IAAIiK,EAAgB1F,EAAyB,aACzC2F,EAAe1G,EAAKwG,SAASlK,OAAOgF,MACpCjH,EAAMqM,EAAarM,IACnBF,EAAOuM,EAAavM,KACpBwM,EAAYD,EAAaD,GAE7BC,EAAarM,IAAM,GACnBqM,EAAavM,KAAO,GACpBuM,EAAaD,GAAiB,GAE9B,IAAIhK,EAAaJ,EAAc2D,EAAKwG,SAASlK,OAAQ0D,EAAKwG,SAASlR,UAAWmM,EAAQlF,QAASC,EAAmBwD,EAAK+F,eAIvHW,EAAarM,IAAMA,EACnBqM,EAAavM,KAAOA,EACpBuM,EAAaD,GAAiBE,EAE9BlF,EAAQhF,WAAaA,EAErB,IAAIjG,EAAQiL,EAAQmF,SAChBtK,EAAS0D,EAAK/F,QAAQqC,OAEtBsD,EAAQ,CACViH,QAAS,SAAiBzJ,GACxB,IAAIzD,EAAQ2C,EAAOc,GAInB,OAHId,EAAOc,GAAaX,EAAWW,KAAeqE,EAAQqF,sBACxDnN,EAAQtB,KAAKC,IAAIgE,EAAOc,GAAYX,EAAWW,KAE1C5D,EAAe,GAAI4D,EAAWzD,IAEvCoN,UAAW,SAAmB3J,GAC5B,IAAIkC,EAAyB,UAAdlC,EAAwB,OAAS,MAC5CzD,EAAQ2C,EAAOgD,GAInB,OAHIhD,EAAOc,GAAaX,EAAWW,KAAeqE,EAAQqF,sBACxDnN,EAAQtB,KAAK2O,IAAI1K,EAAOgD,GAAW7C,EAAWW,IAA4B,UAAdA,EAAwBd,EAAO5D,MAAQ4D,EAAO7D,UAErGe,EAAe,GAAI8F,EAAU3F,KAWxC,OAPAnD,EAAM+J,QAAQ,SAAUnD,GACtB,IAAIiJ,GAA+C,IAAxC,CAAC,OAAQ,OAAOhT,QAAQ+J,GAAoB,UAAY,YACnEd,EAAS1C,EAAS,GAAI0C,EAAQsD,EAAMyG,GAAMjJ,MAG5C4C,EAAK/F,QAAQqC,OAASA,EAEf0D,GA2NL4G,SAAU,CAAC,OAAQ,QAAS,MAAO,UAOnCrK,QAAS,EAMTC,kBAAmB,gBAYrByK,aAAc,CAEZzQ,MAAO,IAEPkK,SAAS,EAETlN,GAlgBJ,SAAsBwM,GACpB,IAAIoD,EAAgBpD,EAAK/F,QACrBqC,EAAS8G,EAAc9G,OACvBhH,EAAY8N,EAAc9N,UAE1B8H,EAAY4C,EAAK5C,UAAUiB,MAAM,KAAK,GACtCiF,EAAQjL,KAAKiL,MACbG,GAAuD,IAA1C,CAAC,MAAO,UAAUpQ,QAAQ+J,GACvCiJ,EAAO5C,EAAa,QAAU,SAC9ByD,EAASzD,EAAa,OAAS,MAC/BjE,EAAciE,EAAa,QAAU,SASzC,OAPInH,EAAO+J,GAAQ/C,EAAMhO,EAAU4R,MACjClH,EAAK/F,QAAQqC,OAAO4K,GAAU5D,EAAMhO,EAAU4R,IAAW5K,EAAOkD,IAE9DlD,EAAO4K,GAAU5D,EAAMhO,EAAU+Q,MACnCrG,EAAK/F,QAAQqC,OAAO4K,GAAU5D,EAAMhO,EAAU+Q,KAGzCrG,IA4fPmH,MAAO,CAEL3Q,MAAO,IAEPkK,SAAS,EAETlN,GApxBJ,SAAewM,EAAMyB,GACnB,IAAI2F,EAGJ,IAAKtD,EAAmB9D,EAAKwG,SAASzG,UAAW,QAAS,gBACxD,OAAOC,EAGT,IAAIqH,EAAe5F,EAAQtN,QAG3B,GAA4B,iBAAjBkT,GAIT,KAHAA,EAAerH,EAAKwG,SAASlK,OAAOgL,cAAcD,IAIhD,OAAOrH,OAKT,IAAKA,EAAKwG,SAASlK,OAAOnF,SAASkQ,GAEjC,OADA7G,QAAQC,KAAK,iEACNT,EAIX,IAAI5C,EAAY4C,EAAK5C,UAAUiB,MAAM,KAAK,GACtC+E,EAAgBpD,EAAK/F,QACrBqC,EAAS8G,EAAc9G,OACvBhH,EAAY8N,EAAc9N,UAE1BmO,GAAuD,IAA1C,CAAC,OAAQ,SAASpQ,QAAQ+J,GAEvCmK,EAAM9D,EAAa,SAAW,QAC9B+D,EAAkB/D,EAAa,MAAQ,OACvC4C,EAAOmB,EAAgBC,cACvBC,EAAUjE,EAAa,OAAS,MAChCyD,EAASzD,EAAa,SAAW,QACjCkE,EAAmBnJ,EAAc6I,GAAcE,GAQ/CjS,EAAU4R,GAAUS,EAAmBrL,EAAO+J,KAChDrG,EAAK/F,QAAQqC,OAAO+J,IAAS/J,EAAO+J,IAAS/Q,EAAU4R,GAAUS,IAG/DrS,EAAU+Q,GAAQsB,EAAmBrL,EAAO4K,KAC9ClH,EAAK/F,QAAQqC,OAAO+J,IAAS/Q,EAAU+Q,GAAQsB,EAAmBrL,EAAO4K,IAE3ElH,EAAK/F,QAAQqC,OAAStC,EAAcgG,EAAK/F,QAAQqC,QAGjD,IAAIsL,EAAStS,EAAU+Q,GAAQ/Q,EAAUiS,GAAO,EAAII,EAAmB,EAInErT,EAAMJ,EAAyB8L,EAAKwG,SAASlK,QAC7CuL,EAAmB3P,WAAW5D,EAAI,SAAWkT,GAAkB,IAC/DM,EAAmB5P,WAAW5D,EAAI,SAAWkT,EAAkB,SAAU,IACzEO,EAAYH,EAAS5H,EAAK/F,QAAQqC,OAAO+J,GAAQwB,EAAmBC,EAQxE,OALAC,EAAY1P,KAAKC,IAAID,KAAK2O,IAAI1K,EAAOiL,GAAOI,EAAkBI,GAAY,GAE1E/H,EAAKqH,aAAeA,EACpBrH,EAAK/F,QAAQkN,OAAmC3N,EAA1B4N,EAAsB,GAAwCf,EAAMhO,KAAKgL,MAAM0E,IAAavO,EAAe4N,EAAqBM,EAAS,IAAKN,GAE7JpH,GA8sBL7L,QAAS,aAcX6T,KAAM,CAEJxR,MAAO,IAEPkK,SAAS,EAETlN,GA5oBJ,SAAcwM,EAAMyB,GAElB,GAAId,EAAkBX,EAAKwG,SAASzG,UAAW,SAC7C,OAAOC,EAGT,GAAIA,EAAKiI,SAAWjI,EAAK5C,YAAc4C,EAAKkI,kBAE1C,OAAOlI,EAGT,IAAIvD,EAAaJ,EAAc2D,EAAKwG,SAASlK,OAAQ0D,EAAKwG,SAASlR,UAAWmM,EAAQlF,QAASkF,EAAQjF,kBAAmBwD,EAAK+F,eAE3H3I,EAAY4C,EAAK5C,UAAUiB,MAAM,KAAK,GACtC8J,EAAoBtJ,EAAqBzB,GACzCgB,EAAY4B,EAAK5C,UAAUiB,MAAM,KAAK,IAAM,GAE5C+J,EAAY,GAEhB,OAAQ3G,EAAQ4G,UACd,KAAKzD,EACHwD,EAAY,CAAChL,EAAW+K,GACxB,MACF,KAAKvD,EACHwD,EAAY7D,EAAUnH,GACtB,MACF,KAAKwH,EACHwD,EAAY7D,EAAUnH,GAAW,GACjC,MACF,QACEgL,EAAY3G,EAAQ4G,SAyDxB,OAtDAD,EAAU7H,QAAQ,SAAU+H,EAAM7D,GAChC,GAAIrH,IAAckL,GAAQF,EAAUjV,SAAWsR,EAAQ,EACrD,OAAOzE,EAGT5C,EAAY4C,EAAK5C,UAAUiB,MAAM,KAAK,GACtC8J,EAAoBtJ,EAAqBzB,GAEzC,IAAIgC,EAAgBY,EAAK/F,QAAQqC,OAC7BiM,EAAavI,EAAK/F,QAAQ3E,UAG1BgO,EAAQjL,KAAKiL,MACbkF,EAA4B,SAAdpL,GAAwBkG,EAAMlE,EAAclF,OAASoJ,EAAMiF,EAAWpO,OAAuB,UAAdiD,GAAyBkG,EAAMlE,EAAcjF,MAAQmJ,EAAMiF,EAAWrO,QAAwB,QAAdkD,GAAuBkG,EAAMlE,EAAchF,QAAUkJ,EAAMiF,EAAWlO,MAAsB,WAAd+C,GAA0BkG,EAAMlE,EAAc/E,KAAOiJ,EAAMiF,EAAWnO,QAEjUqO,EAAgBnF,EAAMlE,EAAcjF,MAAQmJ,EAAM7G,EAAWtC,MAC7DuO,EAAiBpF,EAAMlE,EAAclF,OAASoJ,EAAM7G,EAAWvC,OAC/DyO,EAAerF,EAAMlE,EAAc/E,KAAOiJ,EAAM7G,EAAWpC,KAC3DuO,EAAkBtF,EAAMlE,EAAchF,QAAUkJ,EAAM7G,EAAWrC,QAEjEyO,EAAoC,SAAdzL,GAAwBqL,GAA+B,UAAdrL,GAAyBsL,GAAgC,QAAdtL,GAAuBuL,GAA8B,WAAdvL,GAA0BwL,EAG3KnF,GAAuD,IAA1C,CAAC,MAAO,UAAUpQ,QAAQ+J,GAGvC0L,IAA0BrH,EAAQsH,iBAAmBtF,GAA4B,UAAdrF,GAAyBqK,GAAiBhF,GAA4B,QAAdrF,GAAuBsK,IAAmBjF,GAA4B,UAAdrF,GAAyBuK,IAAiBlF,GAA4B,QAAdrF,GAAuBwK,GAGlQI,IAA8BvH,EAAQwH,0BAA4BxF,GAA4B,UAAdrF,GAAyBsK,GAAkBjF,GAA4B,QAAdrF,GAAuBqK,IAAkBhF,GAA4B,UAAdrF,GAAyBwK,IAAoBnF,GAA4B,QAAdrF,GAAuBuK,GAElRO,EAAmBJ,GAAyBE,GAE5CR,GAAeK,GAAuBK,KAExClJ,EAAKiI,SAAU,GAEXO,GAAeK,KACjBzL,EAAYgL,EAAU3D,EAAQ,IAG5ByE,IACF9K,EAvJR,SAA8BA,GAC5B,MAAkB,QAAdA,EACK,QACgB,UAAdA,EACF,MAEFA,EAiJW+K,CAAqB/K,IAGnC4B,EAAK5C,UAAYA,GAAagB,EAAY,IAAMA,EAAY,IAI5D4B,EAAK/F,QAAQqC,OAAS1C,EAAS,GAAIoG,EAAK/F,QAAQqC,OAAQ2C,EAAiBe,EAAKwG,SAASlK,OAAQ0D,EAAK/F,QAAQ3E,UAAW0K,EAAK5C,YAE5H4C,EAAOF,EAAaE,EAAKwG,SAASzG,UAAWC,EAAM,WAGhDA,GA4jBLqI,SAAU,OAKV9L,QAAS,EAOTC,kBAAmB,WAQnBuM,gBAAgB,EAQhBE,yBAAyB,GAU3BG,MAAO,CAEL5S,MAAO,IAEPkK,SAAS,EAETlN,GArQJ,SAAewM,GACb,IAAI5C,EAAY4C,EAAK5C,UACjB2H,EAAgB3H,EAAUiB,MAAM,KAAK,GACrC+E,EAAgBpD,EAAK/F,QACrBqC,EAAS8G,EAAc9G,OACvBhH,EAAY8N,EAAc9N,UAE1B+J,GAAwD,IAA9C,CAAC,OAAQ,SAAShM,QAAQ0R,GAEpCsE,GAA6D,IAA5C,CAAC,MAAO,QAAQhW,QAAQ0R,GAO7C,OALAzI,EAAO+C,EAAU,OAAS,OAAS/J,EAAUyP,IAAkBsE,EAAiB/M,EAAO+C,EAAU,QAAU,UAAY,GAEvHW,EAAK5C,UAAYyB,EAAqBzB,GACtC4C,EAAK/F,QAAQqC,OAAStC,EAAcsC,GAE7B0D,IAkQPsJ,KAAM,CAEJ9S,MAAO,IAEPkK,SAAS,EAETlN,GA9TJ,SAAcwM,GACZ,IAAK8D,EAAmB9D,EAAKwG,SAASzG,UAAW,OAAQ,mBACvD,OAAOC,EAGT,IAAI3C,EAAU2C,EAAK/F,QAAQ3E,UACvBiU,EAAQ7J,EAAKM,EAAKwG,SAASzG,UAAW,SAAU/D,GAClD,MAAyB,oBAAlBA,EAAS8E,OACfrE,WAEH,GAAIY,EAAQjD,OAASmP,EAAMlP,KAAOgD,EAAQlD,KAAOoP,EAAMrP,OAASmD,EAAQhD,IAAMkP,EAAMnP,QAAUiD,EAAQnD,MAAQqP,EAAMpP,KAAM,CAExH,IAAkB,IAAd6F,EAAKsJ,KACP,OAAOtJ,EAGTA,EAAKsJ,MAAO,EACZtJ,EAAKwJ,WAAW,uBAAyB,OACpC,CAEL,IAAkB,IAAdxJ,EAAKsJ,KACP,OAAOtJ,EAGTA,EAAKsJ,MAAO,EACZtJ,EAAKwJ,WAAW,wBAAyB,EAG3C,OAAOxJ,IAoTPyJ,aAAc,CAEZjT,MAAO,IAEPkK,SAAS,EAETlN,GAtgCJ,SAAsBwM,EAAMyB,GAC1B,IAAIhD,EAAIgD,EAAQhD,EACZE,EAAI8C,EAAQ9C,EACZrC,EAAS0D,EAAK/F,QAAQqC,OAItBoN,EAA8BhK,EAAKM,EAAKwG,SAASzG,UAAW,SAAU/D,GACxE,MAAyB,eAAlBA,EAAS8E,OACf6I,qBACiCjS,IAAhCgS,GACFlJ,QAAQC,KAAK,iIAEf,IAAIkJ,OAAkDjS,IAAhCgS,EAA4CA,EAA8BjI,EAAQkI,gBAEpG1T,EAAeH,EAAgBkK,EAAKwG,SAASlK,QAC7CsN,EAAmBtP,EAAsBrE,GAGzC6B,EAAS,CACX+R,SAAUvN,EAAOuN,UAGf5P,EAAU+I,EAAkBhD,EAAMnN,OAAOiX,iBAAmB,IAAMjG,GAElE7L,EAAc,WAANyG,EAAiB,MAAQ,SACjCxG,EAAc,UAAN0G,EAAgB,OAAS,QAKjCoL,EAAmBhJ,EAAyB,aAW5C5G,OAAO,EACPE,OAAM,EAqBV,GAhBIA,EAJU,UAAVrC,EAG4B,SAA1B/B,EAAatB,UACRsB,EAAa6E,aAAeb,EAAQG,QAEpCwP,EAAiBnR,OAASwB,EAAQG,OAGrCH,EAAQI,IAIZF,EAFU,SAAVlC,EAC4B,SAA1BhC,EAAatB,UACPsB,EAAa4E,YAAcZ,EAAQC,OAEnC0P,EAAiBlR,MAAQuB,EAAQC,MAGpCD,EAAQE,KAEbwP,GAAmBI,EACrBjS,EAAOiS,GAAoB,eAAiB5P,EAAO,OAASE,EAAM,SAClEvC,EAAOE,GAAS,EAChBF,EAAOG,GAAS,EAChBH,EAAOkS,WAAa,gBACf,CAEL,IAAIC,EAAsB,UAAVjS,GAAsB,EAAI,EACtCkS,EAAuB,SAAVjS,GAAqB,EAAI,EAC1CH,EAAOE,GAASqC,EAAM4P,EACtBnS,EAAOG,GAASkC,EAAO+P,EACvBpS,EAAOkS,WAAahS,EAAQ,KAAOC,EAIrC,IAAIuR,EAAa,CACfW,cAAenK,EAAK5C,WAQtB,OAJA4C,EAAKwJ,WAAa5P,EAAS,GAAI4P,EAAYxJ,EAAKwJ,YAChDxJ,EAAKlI,OAAS8B,EAAS,GAAI9B,EAAQkI,EAAKlI,QACxCkI,EAAKoK,YAAcxQ,EAAS,GAAIoG,EAAK/F,QAAQkN,MAAOnH,EAAKoK,aAElDpK,GAo7BL2J,iBAAiB,EAMjBlL,EAAG,SAMHE,EAAG,SAkBL0L,WAAY,CAEV7T,MAAO,IAEPkK,SAAS,EAETlN,GAzpCJ,SAAoBwM,GAgBlB,OAXA8C,EAAU9C,EAAKwG,SAASlK,OAAQ0D,EAAKlI,QAzBvC,SAAuB3D,EAASqV,GAC9BjQ,OAAOiE,KAAKgM,GAAYjJ,QAAQ,SAAUJ,IAE1B,IADFqJ,EAAWrJ,GAErBhM,EAAQmW,aAAanK,EAAMqJ,EAAWrJ,IAEtChM,EAAQoW,gBAAgBpK,KAuB5BqK,CAAcxK,EAAKwG,SAASlK,OAAQ0D,EAAKwJ,YAGrCxJ,EAAKqH,cAAgB9N,OAAOiE,KAAKwC,EAAKoK,aAAajX,QACrD2P,EAAU9C,EAAKqH,aAAcrH,EAAKoK,aAG7BpK,GA2oCLyK,OA9nCJ,SAA0BnV,EAAWgH,EAAQmF,EAASiJ,EAAiBnM,GAErE,IAAIW,EAAmBZ,EAAoBC,EAAOjC,EAAQhH,EAAWmM,EAAQsE,eAKzE3I,EAAYD,EAAqBsE,EAAQrE,UAAW8B,EAAkB5C,EAAQhH,EAAWmM,EAAQ1B,UAAUiI,KAAKxL,kBAAmBiF,EAAQ1B,UAAUiI,KAAKzL,SAQ9J,OANAD,EAAOgO,aAAa,cAAelN,GAInC0F,EAAUxG,EAAQ,CAAEuN,SAAUpI,EAAQsE,cAAgB,QAAU,aAEzDtE,GAsnCLkI,qBAAiBjS,KAuGjBhF,GA+EFiG,EAAYjG,EAAQ,CAAC,CACnB+G,IAAK,SACLE,MAAO,WACL,OA9lDN,WAEE,IAAIhH,KAAK4L,MAAMoM,YAAf,CAIA,IAAI3K,EAAO,CACTwG,SAAU7T,KACVmF,OAAQ,GACRsS,YAAa,GACbZ,WAAY,GACZvB,SAAS,EACThO,QAAS,IAIX+F,EAAK/F,QAAQ3E,UAAYgJ,EAAoB3L,KAAK4L,MAAO5L,KAAK2J,OAAQ3J,KAAK2C,UAAW3C,KAAK8O,QAAQsE,eAKnG/F,EAAK5C,UAAYD,EAAqBxK,KAAK8O,QAAQrE,UAAW4C,EAAK/F,QAAQ3E,UAAW3C,KAAK2J,OAAQ3J,KAAK2C,UAAW3C,KAAK8O,QAAQ1B,UAAUiI,KAAKxL,kBAAmB7J,KAAK8O,QAAQ1B,UAAUiI,KAAKzL,SAG9LyD,EAAKkI,kBAAoBlI,EAAK5C,UAE9B4C,EAAK+F,cAAgBpT,KAAK8O,QAAQsE,cAGlC/F,EAAK/F,QAAQqC,OAAS2C,EAAiBtM,KAAK2J,OAAQ0D,EAAK/F,QAAQ3E,UAAW0K,EAAK5C,WAEjF4C,EAAK/F,QAAQqC,OAAOuN,SAAWlX,KAAK8O,QAAQsE,cAAgB,QAAU,WAGtE/F,EAAOF,EAAanN,KAAKoN,UAAWC,GAI/BrN,KAAK4L,MAAMqM,UAIdjY,KAAK8O,QAAQyE,SAASlG,IAHtBrN,KAAK4L,MAAMqM,WAAY,EACvBjY,KAAK8O,QAAQwE,SAASjG,MAsjDN/L,KAAKtB,QAEpB,CACD8G,IAAK,UACLE,MAAO,WACL,OA7gDN,WAsBE,OArBAhH,KAAK4L,MAAMoM,aAAc,EAGrBhK,EAAkBhO,KAAKoN,UAAW,gBACpCpN,KAAK2J,OAAOiO,gBAAgB,eAC5B5X,KAAK2J,OAAOgF,MAAMuI,SAAW,GAC7BlX,KAAK2J,OAAOgF,MAAMjH,IAAM,GACxB1H,KAAK2J,OAAOgF,MAAMnH,KAAO,GACzBxH,KAAK2J,OAAOgF,MAAMpH,MAAQ,GAC1BvH,KAAK2J,OAAOgF,MAAMlH,OAAS,GAC3BzH,KAAK2J,OAAOgF,MAAM0I,WAAa,GAC/BrX,KAAK2J,OAAOgF,MAAMP,EAAyB,cAAgB,IAG7DpO,KAAK0P,wBAID1P,KAAK8O,QAAQuE,iBACfrT,KAAK2J,OAAO1H,WAAWiW,YAAYlY,KAAK2J,QAEnC3J,MAu/CYsB,KAAKtB,QAErB,CACD8G,IAAK,uBACLE,MAAO,WACL,OA18CN,WACOhH,KAAK4L,MAAM6D,gBACdzP,KAAK4L,MAAQiD,EAAoB7O,KAAK2C,UAAW3C,KAAK8O,QAAS9O,KAAK4L,MAAO5L,KAAK4P,kBAw8ClDtO,KAAKtB,QAElC,CACD8G,IAAK,wBACLE,MAAO,WACL,OAAO0I,EAAsBpO,KAAKtB,UA4B/BD,GApHP,SAASA,EAAO4C,EAAWgH,GACzB,IAAIwO,EAAQnY,KAER8O,EAA6B,EAAnBhK,UAAUtE,aAA+BuE,IAAjBD,UAAU,GAAmBA,UAAU,GAAK,IA3jEjE,SAAU+O,EAAU5N,GACvC,KAAM4N,aAAoB5N,GACxB,MAAM,IAAImS,UAAU,qCA0jEpBC,CAAerY,KAAMD,GAErBC,KAAK4P,eAAiB,WACpB,OAAO0I,sBAAsBH,EAAMI,SAIrCvY,KAAKuY,OAAS5X,EAASX,KAAKuY,OAAOC,KAAKxY,OAGxCA,KAAK8O,QAAU7H,EAAS,GAAIlH,EAAOoT,SAAUrE,GAG7C9O,KAAK4L,MAAQ,CACXoM,aAAa,EACbC,WAAW,EACX3I,cAAe,IAIjBtP,KAAK2C,UAAYA,GAAaA,EAAU8V,OAAS9V,EAAU,GAAKA,EAChE3C,KAAK2J,OAASA,GAAUA,EAAO8O,OAAS9O,EAAO,GAAKA,EAGpD3J,KAAK8O,QAAQ1B,UAAY,GACzBxG,OAAOiE,KAAK5D,EAAS,GAAIlH,EAAOoT,SAAS/F,UAAW0B,EAAQ1B,YAAYQ,QAAQ,SAAUO,GACxFgK,EAAMrJ,QAAQ1B,UAAUe,GAAQlH,EAAS,GAAIlH,EAAOoT,SAAS/F,UAAUe,IAAS,GAAIW,EAAQ1B,UAAY0B,EAAQ1B,UAAUe,GAAQ,MAIpInO,KAAKoN,UAAYxG,OAAOiE,KAAK7K,KAAK8O,QAAQ1B,WAAWtC,IAAI,SAAUqD,GACjE,OAAOlH,EAAS,CACdkH,KAAMA,GACLgK,EAAMrJ,QAAQ1B,UAAUe,MAG5BjD,KAAK,SAAUC,EAAGC,GACjB,OAAOD,EAAEtH,MAAQuH,EAAEvH,QAOrB7D,KAAKoN,UAAUQ,QAAQ,SAAUmK,GAC3BA,EAAgBhK,SAAW5M,EAAW4W,EAAgBD,SACxDC,EAAgBD,OAAOK,EAAMxV,UAAWwV,EAAMxO,OAAQwO,EAAMrJ,QAASiJ,EAAiBI,EAAMvM,SAKhG5L,KAAKuY,SAEL,IAAI9I,EAAgBzP,KAAK8O,QAAQW,cAC7BA,GAEFzP,KAAK0Y,uBAGP1Y,KAAK4L,MAAM6D,cAAgBA,EAiF/B,OAJA1P,EAAO4Y,OAA2B,oBAAXzY,OAAyBA,OAAST,QAAQmZ,YACjE7Y,EAAO2R,WAAaA,EACpB3R,EAAOoT,SAAWA,EAEXpT","file":"popper.min.js","sourcesContent":["// Импортируем Popper\r\n/**!\r\n * @fileOverview Kickass library to create and place poppers near their reference elements.\r\n * @version 1.16.0\r\n * @license\r\n * Copyright (c) 2016 Federico Zivolo and contributors\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n(function (global, factory) {\r\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n\ttypeof define === 'function' && define.amd ? define(factory) :\r\n\t(global.Popper = factory());\r\n}(this, (function () { 'use strict';\r\n\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';\r\n\r\nvar timeoutDuration = function () {\r\n  var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\r\n  for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\r\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\r\n      return 1;\r\n    }\r\n  }\r\n  return 0;\r\n}();\r\n\r\nfunction microtaskDebounce(fn) {\r\n  var called = false;\r\n  return function () {\r\n    if (called) {\r\n      return;\r\n    }\r\n    called = true;\r\n    window.Promise.resolve().then(function () {\r\n      called = false;\r\n      fn();\r\n    });\r\n  };\r\n}\r\n\r\nfunction taskDebounce(fn) {\r\n  var scheduled = false;\r\n  return function () {\r\n    if (!scheduled) {\r\n      scheduled = true;\r\n      setTimeout(function () {\r\n        scheduled = false;\r\n        fn();\r\n      }, timeoutDuration);\r\n    }\r\n  };\r\n}\r\n\r\nvar supportsMicroTasks = isBrowser && window.Promise;\r\n\r\n/**\r\n* Create a debounced version of a method, that's asynchronously deferred\r\n* but called in the minimum time possible.\r\n*\r\n* @method\r\n* @memberof Popper.Utils\r\n* @argument {Function} fn\r\n* @returns {Function}\r\n*/\r\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\r\n\r\n/**\r\n * Check if the given variable is a function\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Any} functionToCheck - variable to check\r\n * @returns {Boolean} answer to: is a function?\r\n */\r\nfunction isFunction(functionToCheck) {\r\n  var getType = {};\r\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\r\n}\r\n\r\n/**\r\n * Get CSS computed property of the given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Eement} element\r\n * @argument {String} property\r\n */\r\nfunction getStyleComputedProperty(element, property) {\r\n  if (element.nodeType !== 1) {\r\n    return [];\r\n  }\r\n  // NOTE: 1 DOM access here\r\n  var window = element.ownerDocument.defaultView;\r\n  var css = window.getComputedStyle(element, null);\r\n  return property ? css[property] : css;\r\n}\r\n\r\n/**\r\n * Returns the parentNode or the host of the element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @returns {Element} parent\r\n */\r\nfunction getParentNode(element) {\r\n  if (element.nodeName === 'HTML') {\r\n    return element;\r\n  }\r\n  return element.parentNode || element.host;\r\n}\r\n\r\n/**\r\n * Returns the scrolling parent of the given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @returns {Element} scroll parent\r\n */\r\nfunction getScrollParent(element) {\r\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\r\n  if (!element) {\r\n    return document.body;\r\n  }\r\n\r\n  switch (element.nodeName) {\r\n    case 'HTML':\r\n    case 'BODY':\r\n      return element.ownerDocument.body;\r\n    case '#document':\r\n      return element.body;\r\n  }\r\n\r\n  // Firefox want us to check `-x` and `-y` variations as well\r\n\r\n  var _getStyleComputedProp = getStyleComputedProperty(element),\r\n      overflow = _getStyleComputedProp.overflow,\r\n      overflowX = _getStyleComputedProp.overflowX,\r\n      overflowY = _getStyleComputedProp.overflowY;\r\n\r\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\r\n    return element;\r\n  }\r\n\r\n  return getScrollParent(getParentNode(element));\r\n}\r\n\r\n/**\r\n * Returns the reference node of the reference object, or the reference object itself.\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {Element|Object} reference - the reference element (the popper will be relative to this)\r\n * @returns {Element} parent\r\n */\r\nfunction getReferenceNode(reference) {\r\n  return reference && reference.referenceNode ? reference.referenceNode : reference;\r\n}\r\n\r\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\r\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\r\n\r\n/**\r\n * Determines if the browser is Internet Explorer\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {Number} version to check\r\n * @returns {Boolean} isIE\r\n */\r\nfunction isIE(version) {\r\n  if (version === 11) {\r\n    return isIE11;\r\n  }\r\n  if (version === 10) {\r\n    return isIE10;\r\n  }\r\n  return isIE11 || isIE10;\r\n}\r\n\r\n/**\r\n * Returns the offset parent of the given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @returns {Element} offset parent\r\n */\r\nfunction getOffsetParent(element) {\r\n  if (!element) {\r\n    return document.documentElement;\r\n  }\r\n\r\n  var noOffsetParent = isIE(10) ? document.body : null;\r\n\r\n  // NOTE: 1 DOM access here\r\n  var offsetParent = element.offsetParent || null;\r\n  // Skip hidden elements which don't have an offsetParent\r\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\r\n    offsetParent = (element = element.nextElementSibling).offsetParent;\r\n  }\r\n\r\n  var nodeName = offsetParent && offsetParent.nodeName;\r\n\r\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\r\n    return element ? element.ownerDocument.documentElement : document.documentElement;\r\n  }\r\n\r\n  // .offsetParent will return the closest TH, TD or TABLE in case\r\n  // no offsetParent is present, I hate this job...\r\n  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\r\n    return getOffsetParent(offsetParent);\r\n  }\r\n\r\n  return offsetParent;\r\n}\r\n\r\nfunction isOffsetContainer(element) {\r\n  var nodeName = element.nodeName;\r\n\r\n  if (nodeName === 'BODY') {\r\n    return false;\r\n  }\r\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\r\n}\r\n\r\n/**\r\n * Finds the root node (document, shadowDOM root) of the given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} node\r\n * @returns {Element} root node\r\n */\r\nfunction getRoot(node) {\r\n  if (node.parentNode !== null) {\r\n    return getRoot(node.parentNode);\r\n  }\r\n\r\n  return node;\r\n}\r\n\r\n/**\r\n * Finds the offset parent common to the two provided nodes\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element1\r\n * @argument {Element} element2\r\n * @returns {Element} common offset parent\r\n */\r\nfunction findCommonOffsetParent(element1, element2) {\r\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\r\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\r\n    return document.documentElement;\r\n  }\r\n\r\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\r\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\r\n  var start = order ? element1 : element2;\r\n  var end = order ? element2 : element1;\r\n\r\n  // Get common ancestor container\r\n  var range = document.createRange();\r\n  range.setStart(start, 0);\r\n  range.setEnd(end, 0);\r\n  var commonAncestorContainer = range.commonAncestorContainer;\r\n\r\n  // Both nodes are inside #document\r\n\r\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\r\n    if (isOffsetContainer(commonAncestorContainer)) {\r\n      return commonAncestorContainer;\r\n    }\r\n\r\n    return getOffsetParent(commonAncestorContainer);\r\n  }\r\n\r\n  // one of the nodes is inside shadowDOM, find which one\r\n  var element1root = getRoot(element1);\r\n  if (element1root.host) {\r\n    return findCommonOffsetParent(element1root.host, element2);\r\n  } else {\r\n    return findCommonOffsetParent(element1, getRoot(element2).host);\r\n  }\r\n}\r\n\r\n/**\r\n * Gets the scroll value of the given element in the given side (top and left)\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @argument {String} side `top` or `left`\r\n * @returns {number} amount of scrolled pixels\r\n */\r\nfunction getScroll(element) {\r\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\r\n\r\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\r\n  var nodeName = element.nodeName;\r\n\r\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\r\n    var html = element.ownerDocument.documentElement;\r\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\r\n    return scrollingElement[upperSide];\r\n  }\r\n\r\n  return element[upperSide];\r\n}\r\n\r\n/*\r\n * Sum or subtract the element scroll values (left and top) from a given rect object\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {Object} rect - Rect object you want to change\r\n * @param {HTMLElement} element - The element from the function reads the scroll values\r\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\r\n * @return {Object} rect - The modifier rect object\r\n */\r\nfunction includeScroll(rect, element) {\r\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n\r\n  var scrollTop = getScroll(element, 'top');\r\n  var scrollLeft = getScroll(element, 'left');\r\n  var modifier = subtract ? -1 : 1;\r\n  rect.top += scrollTop * modifier;\r\n  rect.bottom += scrollTop * modifier;\r\n  rect.left += scrollLeft * modifier;\r\n  rect.right += scrollLeft * modifier;\r\n  return rect;\r\n}\r\n\r\n/*\r\n * Helper to detect borders of a given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {CSSStyleDeclaration} styles\r\n * Result of `getStyleComputedProperty` on the given element\r\n * @param {String} axis - `x` or `y`\r\n * @return {number} borders - The borders size of the given axis\r\n */\r\n\r\nfunction getBordersSize(styles, axis) {\r\n  var sideA = axis === 'x' ? 'Left' : 'Top';\r\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\r\n\r\n  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\r\n}\r\n\r\nfunction getSize(axis, body, html, computedStyle) {\r\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\r\n}\r\n\r\nfunction getWindowSizes(document) {\r\n  var body = document.body;\r\n  var html = document.documentElement;\r\n  var computedStyle = isIE(10) && getComputedStyle(html);\r\n\r\n  return {\r\n    height: getSize('Height', body, html, computedStyle),\r\n    width: getSize('Width', body, html, computedStyle)\r\n  };\r\n}\r\n\r\nvar classCallCheck = function (instance, Constructor) {\r\n  if (!(instance instanceof Constructor)) {\r\n    throw new TypeError(\"Cannot call a class as a function\");\r\n  }\r\n};\r\n\r\nvar createClass = function () {\r\n  function defineProperties(target, props) {\r\n    for (var i = 0; i < props.length; i++) {\r\n      var descriptor = props[i];\r\n      descriptor.enumerable = descriptor.enumerable || false;\r\n      descriptor.configurable = true;\r\n      if (\"value\" in descriptor) descriptor.writable = true;\r\n      Object.defineProperty(target, descriptor.key, descriptor);\r\n    }\r\n  }\r\n\r\n  return function (Constructor, protoProps, staticProps) {\r\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\r\n    if (staticProps) defineProperties(Constructor, staticProps);\r\n    return Constructor;\r\n  };\r\n}();\r\n\r\n\r\n\r\n\r\n\r\nvar defineProperty = function (obj, key, value) {\r\n  if (key in obj) {\r\n    Object.defineProperty(obj, key, {\r\n      value: value,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true\r\n    });\r\n  } else {\r\n    obj[key] = value;\r\n  }\r\n\r\n  return obj;\r\n};\r\n\r\nvar _extends = Object.assign || function (target) {\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    var source = arguments[i];\r\n\r\n    for (var key in source) {\r\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n        target[key] = source[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  return target;\r\n};\r\n\r\n/**\r\n * Given element offsets, generate an output similar to getBoundingClientRect\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Object} offsets\r\n * @returns {Object} ClientRect like output\r\n */\r\nfunction getClientRect(offsets) {\r\n  return _extends({}, offsets, {\r\n    right: offsets.left + offsets.width,\r\n    bottom: offsets.top + offsets.height\r\n  });\r\n}\r\n\r\n/**\r\n * Get bounding client rect of given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {HTMLElement} element\r\n * @return {Object} client rect\r\n */\r\nfunction getBoundingClientRect(element) {\r\n  var rect = {};\r\n\r\n  // IE10 10 FIX: Please, don't ask, the element isn't\r\n  // considered in DOM in some circumstances...\r\n  // This isn't reproducible in IE10 compatibility mode of IE11\r\n  try {\r\n    if (isIE(10)) {\r\n      rect = element.getBoundingClientRect();\r\n      var scrollTop = getScroll(element, 'top');\r\n      var scrollLeft = getScroll(element, 'left');\r\n      rect.top += scrollTop;\r\n      rect.left += scrollLeft;\r\n      rect.bottom += scrollTop;\r\n      rect.right += scrollLeft;\r\n    } else {\r\n      rect = element.getBoundingClientRect();\r\n    }\r\n  } catch (e) {}\r\n\r\n  var result = {\r\n    left: rect.left,\r\n    top: rect.top,\r\n    width: rect.right - rect.left,\r\n    height: rect.bottom - rect.top\r\n  };\r\n\r\n  // subtract scrollbar size from sizes\r\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\r\n  var width = sizes.width || element.clientWidth || result.width;\r\n  var height = sizes.height || element.clientHeight || result.height;\r\n\r\n  var horizScrollbar = element.offsetWidth - width;\r\n  var vertScrollbar = element.offsetHeight - height;\r\n\r\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\r\n  // we make this check conditional for performance reasons\r\n  if (horizScrollbar || vertScrollbar) {\r\n    var styles = getStyleComputedProperty(element);\r\n    horizScrollbar -= getBordersSize(styles, 'x');\r\n    vertScrollbar -= getBordersSize(styles, 'y');\r\n\r\n    result.width -= horizScrollbar;\r\n    result.height -= vertScrollbar;\r\n  }\r\n\r\n  return getClientRect(result);\r\n}\r\n\r\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\r\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n\r\n  var isIE10 = isIE(10);\r\n  var isHTML = parent.nodeName === 'HTML';\r\n  var childrenRect = getBoundingClientRect(children);\r\n  var parentRect = getBoundingClientRect(parent);\r\n  var scrollParent = getScrollParent(children);\r\n\r\n  var styles = getStyleComputedProperty(parent);\r\n  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\r\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\r\n\r\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\r\n  if (fixedPosition && isHTML) {\r\n    parentRect.top = Math.max(parentRect.top, 0);\r\n    parentRect.left = Math.max(parentRect.left, 0);\r\n  }\r\n  var offsets = getClientRect({\r\n    top: childrenRect.top - parentRect.top - borderTopWidth,\r\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\r\n    width: childrenRect.width,\r\n    height: childrenRect.height\r\n  });\r\n  offsets.marginTop = 0;\r\n  offsets.marginLeft = 0;\r\n\r\n  // Subtract margins of documentElement in case it's being used as parent\r\n  // we do this only on HTML because it's the only element that behaves\r\n  // differently when margins are applied to it. The margins are included in\r\n  // the box of the documentElement, in the other cases not.\r\n  if (!isIE10 && isHTML) {\r\n    var marginTop = parseFloat(styles.marginTop, 10);\r\n    var marginLeft = parseFloat(styles.marginLeft, 10);\r\n\r\n    offsets.top -= borderTopWidth - marginTop;\r\n    offsets.bottom -= borderTopWidth - marginTop;\r\n    offsets.left -= borderLeftWidth - marginLeft;\r\n    offsets.right -= borderLeftWidth - marginLeft;\r\n\r\n    // Attach marginTop and marginLeft because in some circumstances we may need them\r\n    offsets.marginTop = marginTop;\r\n    offsets.marginLeft = marginLeft;\r\n  }\r\n\r\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\r\n    offsets = includeScroll(offsets, parent);\r\n  }\r\n\r\n  return offsets;\r\n}\r\n\r\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\r\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n\r\n  var html = element.ownerDocument.documentElement;\r\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\r\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\r\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\r\n\r\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\r\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\r\n\r\n  var offset = {\r\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\r\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\r\n    width: width,\r\n    height: height\r\n  };\r\n\r\n  return getClientRect(offset);\r\n}\r\n\r\n/**\r\n * Check if the given element is fixed or is inside a fixed parent\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @argument {Element} customContainer\r\n * @returns {Boolean} answer to \"isFixed?\"\r\n */\r\nfunction isFixed(element) {\r\n  var nodeName = element.nodeName;\r\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\r\n    return false;\r\n  }\r\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\r\n    return true;\r\n  }\r\n  var parentNode = getParentNode(element);\r\n  if (!parentNode) {\r\n    return false;\r\n  }\r\n  return isFixed(parentNode);\r\n}\r\n\r\n/**\r\n * Finds the first parent of an element that has a transformed property defined\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @returns {Element} first transformed parent or documentElement\r\n */\r\n\r\nfunction getFixedPositionOffsetParent(element) {\r\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\r\n  if (!element || !element.parentElement || isIE()) {\r\n    return document.documentElement;\r\n  }\r\n  var el = element.parentElement;\r\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\r\n    el = el.parentElement;\r\n  }\r\n  return el || document.documentElement;\r\n}\r\n\r\n/**\r\n * Computed the boundaries limits and return them\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {HTMLElement} popper\r\n * @param {HTMLElement} reference\r\n * @param {number} padding\r\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\r\n * @param {Boolean} fixedPosition - Is in fixed position mode\r\n * @returns {Object} Coordinates of the boundaries\r\n */\r\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\r\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\r\n\r\n  // NOTE: 1 DOM access here\r\n\r\n  var boundaries = { top: 0, left: 0 };\r\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\r\n\r\n  // Handle viewport case\r\n  if (boundariesElement === 'viewport') {\r\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\r\n  } else {\r\n    // Handle other cases based on DOM element used as boundaries\r\n    var boundariesNode = void 0;\r\n    if (boundariesElement === 'scrollParent') {\r\n      boundariesNode = getScrollParent(getParentNode(reference));\r\n      if (boundariesNode.nodeName === 'BODY') {\r\n        boundariesNode = popper.ownerDocument.documentElement;\r\n      }\r\n    } else if (boundariesElement === 'window') {\r\n      boundariesNode = popper.ownerDocument.documentElement;\r\n    } else {\r\n      boundariesNode = boundariesElement;\r\n    }\r\n\r\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\r\n\r\n    // In case of HTML, we need a different computation\r\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\r\n      var _getWindowSizes = getWindowSizes(popper.ownerDocument),\r\n          height = _getWindowSizes.height,\r\n          width = _getWindowSizes.width;\r\n\r\n      boundaries.top += offsets.top - offsets.marginTop;\r\n      boundaries.bottom = height + offsets.top;\r\n      boundaries.left += offsets.left - offsets.marginLeft;\r\n      boundaries.right = width + offsets.left;\r\n    } else {\r\n      // for all the other DOM elements, this one is good\r\n      boundaries = offsets;\r\n    }\r\n  }\r\n\r\n  // Add paddings\r\n  padding = padding || 0;\r\n  var isPaddingNumber = typeof padding === 'number';\r\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0;\r\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0;\r\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\r\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\r\n\r\n  return boundaries;\r\n}\r\n\r\nfunction getArea(_ref) {\r\n  var width = _ref.width,\r\n      height = _ref.height;\r\n\r\n  return width * height;\r\n}\r\n\r\n/**\r\n * Utility used to transform the `auto` placement to the placement with more\r\n * available space.\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Object} data - The data object generated by update method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\r\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\r\n\r\n  if (placement.indexOf('auto') === -1) {\r\n    return placement;\r\n  }\r\n\r\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\r\n\r\n  var rects = {\r\n    top: {\r\n      width: boundaries.width,\r\n      height: refRect.top - boundaries.top\r\n    },\r\n    right: {\r\n      width: boundaries.right - refRect.right,\r\n      height: boundaries.height\r\n    },\r\n    bottom: {\r\n      width: boundaries.width,\r\n      height: boundaries.bottom - refRect.bottom\r\n    },\r\n    left: {\r\n      width: refRect.left - boundaries.left,\r\n      height: boundaries.height\r\n    }\r\n  };\r\n\r\n  var sortedAreas = Object.keys(rects).map(function (key) {\r\n    return _extends({\r\n      key: key\r\n    }, rects[key], {\r\n      area: getArea(rects[key])\r\n    });\r\n  }).sort(function (a, b) {\r\n    return b.area - a.area;\r\n  });\r\n\r\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\r\n    var width = _ref2.width,\r\n        height = _ref2.height;\r\n    return width >= popper.clientWidth && height >= popper.clientHeight;\r\n  });\r\n\r\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\r\n\r\n  var variation = placement.split('-')[1];\r\n\r\n  return computedPlacement + (variation ? '-' + variation : '');\r\n}\r\n\r\n/**\r\n * Get offsets to the reference element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {Object} state\r\n * @param {Element} popper - the popper element\r\n * @param {Element} reference - the reference element (the popper will be relative to this)\r\n * @param {Element} fixedPosition - is in fixed position mode\r\n * @returns {Object} An object containing the offsets which will be applied to the popper\r\n */\r\nfunction getReferenceOffsets(state, popper, reference) {\r\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\r\n\r\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\r\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\r\n}\r\n\r\n/**\r\n * Get the outer sizes of the given element (offset size + margins)\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @returns {Object} object containing width and height properties\r\n */\r\nfunction getOuterSizes(element) {\r\n  var window = element.ownerDocument.defaultView;\r\n  var styles = window.getComputedStyle(element);\r\n  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\r\n  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\r\n  var result = {\r\n    width: element.offsetWidth + y,\r\n    height: element.offsetHeight + x\r\n  };\r\n  return result;\r\n}\r\n\r\n/**\r\n * Get the opposite placement of the given one\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {String} placement\r\n * @returns {String} flipped placement\r\n */\r\nfunction getOppositePlacement(placement) {\r\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\r\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\r\n    return hash[matched];\r\n  });\r\n}\r\n\r\n/**\r\n * Get offsets to the popper\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {Object} position - CSS position the Popper will get applied\r\n * @param {HTMLElement} popper - the popper element\r\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\r\n * @param {String} placement - one of the valid placement options\r\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\r\n */\r\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\r\n  placement = placement.split('-')[0];\r\n\r\n  // Get popper node sizes\r\n  var popperRect = getOuterSizes(popper);\r\n\r\n  // Add position, width and height to our offsets object\r\n  var popperOffsets = {\r\n    width: popperRect.width,\r\n    height: popperRect.height\r\n  };\r\n\r\n  // depending by the popper placement we have to compute its offsets slightly differently\r\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\r\n  var mainSide = isHoriz ? 'top' : 'left';\r\n  var secondarySide = isHoriz ? 'left' : 'top';\r\n  var measurement = isHoriz ? 'height' : 'width';\r\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\r\n\r\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\r\n  if (placement === secondarySide) {\r\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\r\n  } else {\r\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\r\n  }\r\n\r\n  return popperOffsets;\r\n}\r\n\r\n/**\r\n * Mimics the `find` method of Array\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Array} arr\r\n * @argument prop\r\n * @argument value\r\n * @returns index or -1\r\n */\r\nfunction find(arr, check) {\r\n  // use native find if supported\r\n  if (Array.prototype.find) {\r\n    return arr.find(check);\r\n  }\r\n\r\n  // use `filter` to obtain the same behavior of `find`\r\n  return arr.filter(check)[0];\r\n}\r\n\r\n/**\r\n * Return the index of the matching object\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Array} arr\r\n * @argument prop\r\n * @argument value\r\n * @returns index or -1\r\n */\r\nfunction findIndex(arr, prop, value) {\r\n  // use native findIndex if supported\r\n  if (Array.prototype.findIndex) {\r\n    return arr.findIndex(function (cur) {\r\n      return cur[prop] === value;\r\n    });\r\n  }\r\n\r\n  // use `find` + `indexOf` if `findIndex` isn't supported\r\n  var match = find(arr, function (obj) {\r\n    return obj[prop] === value;\r\n  });\r\n  return arr.indexOf(match);\r\n}\r\n\r\n/**\r\n * Loop trough the list of modifiers and run them in order,\r\n * each of them will then edit the data object.\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {dataObject} data\r\n * @param {Array} modifiers\r\n * @param {String} ends - Optional modifier name used as stopper\r\n * @returns {dataObject}\r\n */\r\nfunction runModifiers(modifiers, data, ends) {\r\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\r\n\r\n  modifiersToRun.forEach(function (modifier) {\r\n    if (modifier['function']) {\r\n      // eslint-disable-line dot-notation\r\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\r\n    }\r\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\r\n    if (modifier.enabled && isFunction(fn)) {\r\n      // Add properties to offsets to make them a complete clientRect object\r\n      // we do this before each modifier to make sure the previous one doesn't\r\n      // mess with these values\r\n      data.offsets.popper = getClientRect(data.offsets.popper);\r\n      data.offsets.reference = getClientRect(data.offsets.reference);\r\n\r\n      data = fn(data, modifier);\r\n    }\r\n  });\r\n\r\n  return data;\r\n}\r\n\r\n/**\r\n * Updates the position of the popper, computing the new offsets and applying\r\n * the new style.<br />\r\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\r\n * @method\r\n * @memberof Popper\r\n */\r\nfunction update() {\r\n  // if popper is destroyed, don't perform any further update\r\n  if (this.state.isDestroyed) {\r\n    return;\r\n  }\r\n\r\n  var data = {\r\n    instance: this,\r\n    styles: {},\r\n    arrowStyles: {},\r\n    attributes: {},\r\n    flipped: false,\r\n    offsets: {}\r\n  };\r\n\r\n  // compute reference element offsets\r\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\r\n\r\n  // compute auto placement, store placement inside the data object,\r\n  // modifiers will be able to edit `placement` if needed\r\n  // and refer to originalPlacement to know the original value\r\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\r\n\r\n  // store the computed placement inside `originalPlacement`\r\n  data.originalPlacement = data.placement;\r\n\r\n  data.positionFixed = this.options.positionFixed;\r\n\r\n  // compute the popper offsets\r\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\r\n\r\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\r\n\r\n  // run the modifiers\r\n  data = runModifiers(this.modifiers, data);\r\n\r\n  // the first `update` will call `onCreate` callback\r\n  // the other ones will call `onUpdate` callback\r\n  if (!this.state.isCreated) {\r\n    this.state.isCreated = true;\r\n    this.options.onCreate(data);\r\n  } else {\r\n    this.options.onUpdate(data);\r\n  }\r\n}\r\n\r\n/**\r\n * Helper used to know if the given modifier is enabled.\r\n * @method\r\n * @memberof Popper.Utils\r\n * @returns {Boolean}\r\n */\r\nfunction isModifierEnabled(modifiers, modifierName) {\r\n  return modifiers.some(function (_ref) {\r\n    var name = _ref.name,\r\n        enabled = _ref.enabled;\r\n    return enabled && name === modifierName;\r\n  });\r\n}\r\n\r\n/**\r\n * Get the prefixed supported property name\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {String} property (camelCase)\r\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\r\n */\r\nfunction getSupportedPropertyName(property) {\r\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\r\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\r\n\r\n  for (var i = 0; i < prefixes.length; i++) {\r\n    var prefix = prefixes[i];\r\n    var toCheck = prefix ? '' + prefix + upperProp : property;\r\n    if (typeof document.body.style[toCheck] !== 'undefined') {\r\n      return toCheck;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * Destroys the popper.\r\n * @method\r\n * @memberof Popper\r\n */\r\nfunction destroy() {\r\n  this.state.isDestroyed = true;\r\n\r\n  // touch DOM only if `applyStyle` modifier is enabled\r\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\r\n    this.popper.removeAttribute('x-placement');\r\n    this.popper.style.position = '';\r\n    this.popper.style.top = '';\r\n    this.popper.style.left = '';\r\n    this.popper.style.right = '';\r\n    this.popper.style.bottom = '';\r\n    this.popper.style.willChange = '';\r\n    this.popper.style[getSupportedPropertyName('transform')] = '';\r\n  }\r\n\r\n  this.disableEventListeners();\r\n\r\n  // remove the popper if user explicitly asked for the deletion on destroy\r\n  // do not use `remove` because IE11 doesn't support it\r\n  if (this.options.removeOnDestroy) {\r\n    this.popper.parentNode.removeChild(this.popper);\r\n  }\r\n  return this;\r\n}\r\n\r\n/**\r\n * Get the window associated with the element\r\n * @argument {Element} element\r\n * @returns {Window}\r\n */\r\nfunction getWindow(element) {\r\n  var ownerDocument = element.ownerDocument;\r\n  return ownerDocument ? ownerDocument.defaultView : window;\r\n}\r\n\r\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\r\n  var isBody = scrollParent.nodeName === 'BODY';\r\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\r\n  target.addEventListener(event, callback, { passive: true });\r\n\r\n  if (!isBody) {\r\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\r\n  }\r\n  scrollParents.push(target);\r\n}\r\n\r\n/**\r\n * Setup needed event listeners used to update the popper position\r\n * @method\r\n * @memberof Popper.Utils\r\n * @private\r\n */\r\nfunction setupEventListeners(reference, options, state, updateBound) {\r\n  // Resize event listener on window\r\n  state.updateBound = updateBound;\r\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\r\n\r\n  // Scroll event listener on scroll parents\r\n  var scrollElement = getScrollParent(reference);\r\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\r\n  state.scrollElement = scrollElement;\r\n  state.eventsEnabled = true;\r\n\r\n  return state;\r\n}\r\n\r\n/**\r\n * It will add resize/scroll events and start recalculating\r\n * position of the popper element when they are triggered.\r\n * @method\r\n * @memberof Popper\r\n */\r\nfunction enableEventListeners() {\r\n  if (!this.state.eventsEnabled) {\r\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\r\n  }\r\n}\r\n\r\n/**\r\n * Remove event listeners used to update the popper position\r\n * @method\r\n * @memberof Popper.Utils\r\n * @private\r\n */\r\nfunction removeEventListeners(reference, state) {\r\n  // Remove resize event listener on window\r\n  getWindow(reference).removeEventListener('resize', state.updateBound);\r\n\r\n  // Remove scroll event listener on scroll parents\r\n  state.scrollParents.forEach(function (target) {\r\n    target.removeEventListener('scroll', state.updateBound);\r\n  });\r\n\r\n  // Reset state\r\n  state.updateBound = null;\r\n  state.scrollParents = [];\r\n  state.scrollElement = null;\r\n  state.eventsEnabled = false;\r\n  return state;\r\n}\r\n\r\n/**\r\n * It will remove resize/scroll events and won't recalculate popper position\r\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\r\n * unless you call `update` method manually.\r\n * @method\r\n * @memberof Popper\r\n */\r\nfunction disableEventListeners() {\r\n  if (this.state.eventsEnabled) {\r\n    cancelAnimationFrame(this.scheduleUpdate);\r\n    this.state = removeEventListeners(this.reference, this.state);\r\n  }\r\n}\r\n\r\n/**\r\n * Tells if a given input is a number\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {*} input to check\r\n * @return {Boolean}\r\n */\r\nfunction isNumeric(n) {\r\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\r\n}\r\n\r\n/**\r\n * Set the style to the given popper\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element - Element to apply the style to\r\n * @argument {Object} styles\r\n * Object with a list of properties and values which will be applied to the element\r\n */\r\nfunction setStyles(element, styles) {\r\n  Object.keys(styles).forEach(function (prop) {\r\n    var unit = '';\r\n    // add unit if the value is numeric and is one of the following\r\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\r\n      unit = 'px';\r\n    }\r\n    element.style[prop] = styles[prop] + unit;\r\n  });\r\n}\r\n\r\n/**\r\n * Set the attributes to the given popper\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element - Element to apply the attributes to\r\n * @argument {Object} styles\r\n * Object with a list of properties and values which will be applied to the element\r\n */\r\nfunction setAttributes(element, attributes) {\r\n  Object.keys(attributes).forEach(function (prop) {\r\n    var value = attributes[prop];\r\n    if (value !== false) {\r\n      element.setAttribute(prop, attributes[prop]);\r\n    } else {\r\n      element.removeAttribute(prop);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by `update` method\r\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\r\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The same data object\r\n */\r\nfunction applyStyle(data) {\r\n  // any property present in `data.styles` will be applied to the popper,\r\n  // in this way we can make the 3rd party modifiers add custom styles to it\r\n  // Be aware, modifiers could override the properties defined in the previous\r\n  // lines of this modifier!\r\n  setStyles(data.instance.popper, data.styles);\r\n\r\n  // any property present in `data.attributes` will be applied to the popper,\r\n  // they will be set as HTML attributes of the element\r\n  setAttributes(data.instance.popper, data.attributes);\r\n\r\n  // if arrowElement is defined and arrowStyles has some properties\r\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\r\n    setStyles(data.arrowElement, data.arrowStyles);\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\n/**\r\n * Set the x-placement attribute before everything else because it could be used\r\n * to add margins to the popper margins needs to be calculated to get the\r\n * correct popper offsets.\r\n * @method\r\n * @memberof Popper.modifiers\r\n * @param {HTMLElement} reference - The reference element used to position the popper\r\n * @param {HTMLElement} popper - The HTML element used as popper\r\n * @param {Object} options - Popper.js options\r\n */\r\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\r\n  // compute reference element offsets\r\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\r\n\r\n  // compute auto placement, store placement inside the data object,\r\n  // modifiers will be able to edit `placement` if needed\r\n  // and refer to originalPlacement to know the original value\r\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\r\n\r\n  popper.setAttribute('x-placement', placement);\r\n\r\n  // Apply `position` to popper before anything else because\r\n  // without the position applied we can't guarantee correct computations\r\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\r\n\r\n  return options;\r\n}\r\n\r\n/**\r\n * @function\r\n * @memberof Popper.Utils\r\n * @argument {Object} data - The data object generated by `update` method\r\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\r\n * @returns {Object} The popper's position offsets rounded\r\n *\r\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\r\n * good as it can be within reason.\r\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\r\n *\r\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\r\n * as well on High DPI screens).\r\n *\r\n * Firefox prefers no rounding for positioning and does not have blurriness on\r\n * high DPI screens.\r\n *\r\n * Only horizontal placement and left/right values need to be considered.\r\n */\r\nfunction getRoundedOffsets(data, shouldRound) {\r\n  var _data$offsets = data.offsets,\r\n      popper = _data$offsets.popper,\r\n      reference = _data$offsets.reference;\r\n  var round = Math.round,\r\n      floor = Math.floor;\r\n\r\n  var noRound = function noRound(v) {\r\n    return v;\r\n  };\r\n\r\n  var referenceWidth = round(reference.width);\r\n  var popperWidth = round(popper.width);\r\n\r\n  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\r\n  var isVariation = data.placement.indexOf('-') !== -1;\r\n  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;\r\n  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\r\n\r\n  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;\r\n  var verticalToInteger = !shouldRound ? noRound : round;\r\n\r\n  return {\r\n    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),\r\n    top: verticalToInteger(popper.top),\r\n    bottom: verticalToInteger(popper.bottom),\r\n    right: horizontalToInteger(popper.right)\r\n  };\r\n}\r\n\r\nvar isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\r\n\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by `update` method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction computeStyle(data, options) {\r\n  var x = options.x,\r\n      y = options.y;\r\n  var popper = data.offsets.popper;\r\n\r\n  // Remove this legacy support in Popper.js v2\r\n\r\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\r\n    return modifier.name === 'applyStyle';\r\n  }).gpuAcceleration;\r\n  if (legacyGpuAccelerationOption !== undefined) {\r\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\r\n  }\r\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\r\n\r\n  var offsetParent = getOffsetParent(data.instance.popper);\r\n  var offsetParentRect = getBoundingClientRect(offsetParent);\r\n\r\n  // Styles\r\n  var styles = {\r\n    position: popper.position\r\n  };\r\n\r\n  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);\r\n\r\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\r\n  var sideB = y === 'right' ? 'left' : 'right';\r\n\r\n  // if gpuAcceleration is set to `true` and transform is supported,\r\n  //  we use `translate3d` to apply the position to the popper we\r\n  // automatically use the supported prefixed version if needed\r\n  var prefixedProperty = getSupportedPropertyName('transform');\r\n\r\n  // now, let's make a step back and look at this code closely (wtf?)\r\n  // If the content of the popper grows once it's been positioned, it\r\n  // may happen that the popper gets misplaced because of the new content\r\n  // overflowing its reference element\r\n  // To avoid this problem, we provide two options (x and y), which allow\r\n  // the consumer to define the offset origin.\r\n  // If we position a popper on top of a reference element, we can set\r\n  // `x` to `top` to make the popper grow towards its top instead of\r\n  // its bottom.\r\n  var left = void 0,\r\n      top = void 0;\r\n  if (sideA === 'bottom') {\r\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\r\n    // and not the bottom of the html element\r\n    if (offsetParent.nodeName === 'HTML') {\r\n      top = -offsetParent.clientHeight + offsets.bottom;\r\n    } else {\r\n      top = -offsetParentRect.height + offsets.bottom;\r\n    }\r\n  } else {\r\n    top = offsets.top;\r\n  }\r\n  if (sideB === 'right') {\r\n    if (offsetParent.nodeName === 'HTML') {\r\n      left = -offsetParent.clientWidth + offsets.right;\r\n    } else {\r\n      left = -offsetParentRect.width + offsets.right;\r\n    }\r\n  } else {\r\n    left = offsets.left;\r\n  }\r\n  if (gpuAcceleration && prefixedProperty) {\r\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\r\n    styles[sideA] = 0;\r\n    styles[sideB] = 0;\r\n    styles.willChange = 'transform';\r\n  } else {\r\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\r\n    var invertTop = sideA === 'bottom' ? -1 : 1;\r\n    var invertLeft = sideB === 'right' ? -1 : 1;\r\n    styles[sideA] = top * invertTop;\r\n    styles[sideB] = left * invertLeft;\r\n    styles.willChange = sideA + ', ' + sideB;\r\n  }\r\n\r\n  // Attributes\r\n  var attributes = {\r\n    'x-placement': data.placement\r\n  };\r\n\r\n  // Update `data` attributes, styles and arrowStyles\r\n  data.attributes = _extends({}, attributes, data.attributes);\r\n  data.styles = _extends({}, styles, data.styles);\r\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\r\n\r\n  return data;\r\n}\r\n\r\n/**\r\n * Helper used to know if the given modifier depends from another one.<br />\r\n * It checks if the needed modifier is listed and enabled.\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {Array} modifiers - list of modifiers\r\n * @param {String} requestingName - name of requesting modifier\r\n * @param {String} requestedName - name of requested modifier\r\n * @returns {Boolean}\r\n */\r\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\r\n  var requesting = find(modifiers, function (_ref) {\r\n    var name = _ref.name;\r\n    return name === requestingName;\r\n  });\r\n\r\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\r\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\r\n  });\r\n\r\n  if (!isRequired) {\r\n    var _requesting = '`' + requestingName + '`';\r\n    var requested = '`' + requestedName + '`';\r\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\r\n  }\r\n  return isRequired;\r\n}\r\n\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by update method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction arrow(data, options) {\r\n  var _data$offsets$arrow;\r\n\r\n  // arrow depends on keepTogether in order to work\r\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\r\n    return data;\r\n  }\r\n\r\n  var arrowElement = options.element;\r\n\r\n  // if arrowElement is a string, suppose it's a CSS selector\r\n  if (typeof arrowElement === 'string') {\r\n    arrowElement = data.instance.popper.querySelector(arrowElement);\r\n\r\n    // if arrowElement is not found, don't run the modifier\r\n    if (!arrowElement) {\r\n      return data;\r\n    }\r\n  } else {\r\n    // if the arrowElement isn't a query selector we must check that the\r\n    // provided DOM node is child of its popper node\r\n    if (!data.instance.popper.contains(arrowElement)) {\r\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\r\n      return data;\r\n    }\r\n  }\r\n\r\n  var placement = data.placement.split('-')[0];\r\n  var _data$offsets = data.offsets,\r\n      popper = _data$offsets.popper,\r\n      reference = _data$offsets.reference;\r\n\r\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\r\n\r\n  var len = isVertical ? 'height' : 'width';\r\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\r\n  var side = sideCapitalized.toLowerCase();\r\n  var altSide = isVertical ? 'left' : 'top';\r\n  var opSide = isVertical ? 'bottom' : 'right';\r\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\r\n\r\n  //\r\n  // extends keepTogether behavior making sure the popper and its\r\n  // reference have enough pixels in conjunction\r\n  //\r\n\r\n  // top/left side\r\n  if (reference[opSide] - arrowElementSize < popper[side]) {\r\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\r\n  }\r\n  // bottom/right side\r\n  if (reference[side] + arrowElementSize > popper[opSide]) {\r\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\r\n  }\r\n  data.offsets.popper = getClientRect(data.offsets.popper);\r\n\r\n  // compute center of the popper\r\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\r\n\r\n  // Compute the sideValue using the updated popper offsets\r\n  // take popper margin in account because we don't have this info available\r\n  var css = getStyleComputedProperty(data.instance.popper);\r\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\r\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\r\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\r\n\r\n  // prevent arrowElement from being placed not contiguously to its popper\r\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\r\n\r\n  data.arrowElement = arrowElement;\r\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\r\n\r\n  return data;\r\n}\r\n\r\n/**\r\n * Get the opposite placement variation of the given one\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {String} placement variation\r\n * @returns {String} flipped placement variation\r\n */\r\nfunction getOppositeVariation(variation) {\r\n  if (variation === 'end') {\r\n    return 'start';\r\n  } else if (variation === 'start') {\r\n    return 'end';\r\n  }\r\n  return variation;\r\n}\r\n\r\n/**\r\n * List of accepted placements to use as values of the `placement` option.<br />\r\n * Valid placements are:\r\n * - `auto`\r\n * - `top`\r\n * - `right`\r\n * - `bottom`\r\n * - `left`\r\n *\r\n * Each placement can have a variation from this list:\r\n * - `-start`\r\n * - `-end`\r\n *\r\n * Variations are interpreted easily if you think of them as the left to right\r\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\r\n * is right.<br />\r\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\r\n *\r\n * Some valid examples are:\r\n * - `top-end` (on top of reference, right aligned)\r\n * - `right-start` (on right of reference, top aligned)\r\n * - `bottom` (on bottom, centered)\r\n * - `auto-end` (on the side with more space available, alignment depends by placement)\r\n *\r\n * @static\r\n * @type {Array}\r\n * @enum {String}\r\n * @readonly\r\n * @method placements\r\n * @memberof Popper\r\n */\r\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\r\n\r\n// Get rid of `auto` `auto-start` and `auto-end`\r\nvar validPlacements = placements.slice(3);\r\n\r\n/**\r\n * Given an initial placement, returns all the subsequent placements\r\n * clockwise (or counter-clockwise).\r\n *\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {String} placement - A valid placement (it accepts variations)\r\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\r\n * @returns {Array} placements including their variations\r\n */\r\nfunction clockwise(placement) {\r\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n\r\n  var index = validPlacements.indexOf(placement);\r\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\r\n  return counter ? arr.reverse() : arr;\r\n}\r\n\r\nvar BEHAVIORS = {\r\n  FLIP: 'flip',\r\n  CLOCKWISE: 'clockwise',\r\n  COUNTERCLOCKWISE: 'counterclockwise'\r\n};\r\n\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by update method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction flip(data, options) {\r\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\r\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\r\n    return data;\r\n  }\r\n\r\n  if (data.flipped && data.placement === data.originalPlacement) {\r\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\r\n    return data;\r\n  }\r\n\r\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\r\n\r\n  var placement = data.placement.split('-')[0];\r\n  var placementOpposite = getOppositePlacement(placement);\r\n  var variation = data.placement.split('-')[1] || '';\r\n\r\n  var flipOrder = [];\r\n\r\n  switch (options.behavior) {\r\n    case BEHAVIORS.FLIP:\r\n      flipOrder = [placement, placementOpposite];\r\n      break;\r\n    case BEHAVIORS.CLOCKWISE:\r\n      flipOrder = clockwise(placement);\r\n      break;\r\n    case BEHAVIORS.COUNTERCLOCKWISE:\r\n      flipOrder = clockwise(placement, true);\r\n      break;\r\n    default:\r\n      flipOrder = options.behavior;\r\n  }\r\n\r\n  flipOrder.forEach(function (step, index) {\r\n    if (placement !== step || flipOrder.length === index + 1) {\r\n      return data;\r\n    }\r\n\r\n    placement = data.placement.split('-')[0];\r\n    placementOpposite = getOppositePlacement(placement);\r\n\r\n    var popperOffsets = data.offsets.popper;\r\n    var refOffsets = data.offsets.reference;\r\n\r\n    // using floor because the reference offsets may contain decimals we are not going to consider here\r\n    var floor = Math.floor;\r\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\r\n\r\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\r\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\r\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\r\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\r\n\r\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\r\n\r\n    // flip the variation if required\r\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\r\n\r\n    // flips variation if reference element overflows boundaries\r\n    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\r\n\r\n    // flips variation if popper content overflows boundaries\r\n    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);\r\n\r\n    var flippedVariation = flippedVariationByRef || flippedVariationByContent;\r\n\r\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\r\n      // this boolean to detect any flip loop\r\n      data.flipped = true;\r\n\r\n      if (overlapsRef || overflowsBoundaries) {\r\n        placement = flipOrder[index + 1];\r\n      }\r\n\r\n      if (flippedVariation) {\r\n        variation = getOppositeVariation(variation);\r\n      }\r\n\r\n      data.placement = placement + (variation ? '-' + variation : '');\r\n\r\n      // this object contains `position`, we want to preserve it along with\r\n      // any additional property we may add in the future\r\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\r\n\r\n      data = runModifiers(data.instance.modifiers, data, 'flip');\r\n    }\r\n  });\r\n  return data;\r\n}\r\n\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by update method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction keepTogether(data) {\r\n  var _data$offsets = data.offsets,\r\n      popper = _data$offsets.popper,\r\n      reference = _data$offsets.reference;\r\n\r\n  var placement = data.placement.split('-')[0];\r\n  var floor = Math.floor;\r\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\r\n  var side = isVertical ? 'right' : 'bottom';\r\n  var opSide = isVertical ? 'left' : 'top';\r\n  var measurement = isVertical ? 'width' : 'height';\r\n\r\n  if (popper[side] < floor(reference[opSide])) {\r\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\r\n  }\r\n  if (popper[opSide] > floor(reference[side])) {\r\n    data.offsets.popper[opSide] = floor(reference[side]);\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\n/**\r\n * Converts a string containing value + unit into a px value number\r\n * @function\r\n * @memberof {modifiers~offset}\r\n * @private\r\n * @argument {String} str - Value + unit string\r\n * @argument {String} measurement - `height` or `width`\r\n * @argument {Object} popperOffsets\r\n * @argument {Object} referenceOffsets\r\n * @returns {Number|String}\r\n * Value in pixels, or original string if no values were extracted\r\n */\r\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\r\n  // separate value from unit\r\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\r\n  var value = +split[1];\r\n  var unit = split[2];\r\n\r\n  // If it's not a number it's an operator, I guess\r\n  if (!value) {\r\n    return str;\r\n  }\r\n\r\n  if (unit.indexOf('%') === 0) {\r\n    var element = void 0;\r\n    switch (unit) {\r\n      case '%p':\r\n        element = popperOffsets;\r\n        break;\r\n      case '%':\r\n      case '%r':\r\n      default:\r\n        element = referenceOffsets;\r\n    }\r\n\r\n    var rect = getClientRect(element);\r\n    return rect[measurement] / 100 * value;\r\n  } else if (unit === 'vh' || unit === 'vw') {\r\n    // if is a vh or vw, we calculate the size based on the viewport\r\n    var size = void 0;\r\n    if (unit === 'vh') {\r\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n    } else {\r\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\r\n    }\r\n    return size / 100 * value;\r\n  } else {\r\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\r\n    // if is an implicit unit, it's px, and we return just the value\r\n    return value;\r\n  }\r\n}\r\n\r\n/**\r\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\r\n * @function\r\n * @memberof {modifiers~offset}\r\n * @private\r\n * @argument {String} offset\r\n * @argument {Object} popperOffsets\r\n * @argument {Object} referenceOffsets\r\n * @argument {String} basePlacement\r\n * @returns {Array} a two cells array with x and y offsets in numbers\r\n */\r\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\r\n  var offsets = [0, 0];\r\n\r\n  // Use height if placement is left or right and index is 0 otherwise use width\r\n  // in this way the first offset will use an axis and the second one\r\n  // will use the other one\r\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\r\n\r\n  // Split the offset string to obtain a list of values and operands\r\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\r\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\r\n    return frag.trim();\r\n  });\r\n\r\n  // Detect if the offset string contains a pair of values or a single one\r\n  // they could be separated by comma or space\r\n  var divider = fragments.indexOf(find(fragments, function (frag) {\r\n    return frag.search(/,|\\s/) !== -1;\r\n  }));\r\n\r\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\r\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\r\n  }\r\n\r\n  // If divider is found, we divide the list of values and operands to divide\r\n  // them by ofset X and Y.\r\n  var splitRegex = /\\s*,\\s*|\\s+/;\r\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\r\n\r\n  // Convert the values with units to absolute pixels to allow our computations\r\n  ops = ops.map(function (op, index) {\r\n    // Most of the units rely on the orientation of the popper\r\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\r\n    var mergeWithPrevious = false;\r\n    return op\r\n    // This aggregates any `+` or `-` sign that aren't considered operators\r\n    // e.g.: 10 + +5 => [10, +, +5]\r\n    .reduce(function (a, b) {\r\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\r\n        a[a.length - 1] = b;\r\n        mergeWithPrevious = true;\r\n        return a;\r\n      } else if (mergeWithPrevious) {\r\n        a[a.length - 1] += b;\r\n        mergeWithPrevious = false;\r\n        return a;\r\n      } else {\r\n        return a.concat(b);\r\n      }\r\n    }, [])\r\n    // Here we convert the string values into number values (in px)\r\n    .map(function (str) {\r\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\r\n    });\r\n  });\r\n\r\n  // Loop trough the offsets arrays and execute the operations\r\n  ops.forEach(function (op, index) {\r\n    op.forEach(function (frag, index2) {\r\n      if (isNumeric(frag)) {\r\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\r\n      }\r\n    });\r\n  });\r\n  return offsets;\r\n}\r\n\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by update method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @argument {Number|String} options.offset=0\r\n * The offset value as described in the modifier description\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction offset(data, _ref) {\r\n  var offset = _ref.offset;\r\n  var placement = data.placement,\r\n      _data$offsets = data.offsets,\r\n      popper = _data$offsets.popper,\r\n      reference = _data$offsets.reference;\r\n\r\n  var basePlacement = placement.split('-')[0];\r\n\r\n  var offsets = void 0;\r\n  if (isNumeric(+offset)) {\r\n    offsets = [+offset, 0];\r\n  } else {\r\n    offsets = parseOffset(offset, popper, reference, basePlacement);\r\n  }\r\n\r\n  if (basePlacement === 'left') {\r\n    popper.top += offsets[0];\r\n    popper.left -= offsets[1];\r\n  } else if (basePlacement === 'right') {\r\n    popper.top += offsets[0];\r\n    popper.left += offsets[1];\r\n  } else if (basePlacement === 'top') {\r\n    popper.left += offsets[0];\r\n    popper.top -= offsets[1];\r\n  } else if (basePlacement === 'bottom') {\r\n    popper.left += offsets[0];\r\n    popper.top += offsets[1];\r\n  }\r\n\r\n  data.popper = popper;\r\n  return data;\r\n}\r\n\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by `update` method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction preventOverflow(data, options) {\r\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\r\n\r\n  // If offsetParent is the reference element, we really want to\r\n  // go one step up and use the next offsetParent as reference to\r\n  // avoid to make this modifier completely useless and look like broken\r\n  if (data.instance.reference === boundariesElement) {\r\n    boundariesElement = getOffsetParent(boundariesElement);\r\n  }\r\n\r\n  // NOTE: DOM access here\r\n  // resets the popper's position so that the document size can be calculated excluding\r\n  // the size of the popper element itself\r\n  var transformProp = getSupportedPropertyName('transform');\r\n  var popperStyles = data.instance.popper.style; // assignment to help minification\r\n  var top = popperStyles.top,\r\n      left = popperStyles.left,\r\n      transform = popperStyles[transformProp];\r\n\r\n  popperStyles.top = '';\r\n  popperStyles.left = '';\r\n  popperStyles[transformProp] = '';\r\n\r\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\r\n\r\n  // NOTE: DOM access here\r\n  // restores the original style properties after the offsets have been computed\r\n  popperStyles.top = top;\r\n  popperStyles.left = left;\r\n  popperStyles[transformProp] = transform;\r\n\r\n  options.boundaries = boundaries;\r\n\r\n  var order = options.priority;\r\n  var popper = data.offsets.popper;\r\n\r\n  var check = {\r\n    primary: function primary(placement) {\r\n      var value = popper[placement];\r\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\r\n        value = Math.max(popper[placement], boundaries[placement]);\r\n      }\r\n      return defineProperty({}, placement, value);\r\n    },\r\n    secondary: function secondary(placement) {\r\n      var mainSide = placement === 'right' ? 'left' : 'top';\r\n      var value = popper[mainSide];\r\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\r\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\r\n      }\r\n      return defineProperty({}, mainSide, value);\r\n    }\r\n  };\r\n\r\n  order.forEach(function (placement) {\r\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\r\n    popper = _extends({}, popper, check[side](placement));\r\n  });\r\n\r\n  data.offsets.popper = popper;\r\n\r\n  return data;\r\n}\r\n\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by `update` method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction shift(data) {\r\n  var placement = data.placement;\r\n  var basePlacement = placement.split('-')[0];\r\n  var shiftvariation = placement.split('-')[1];\r\n\r\n  // if shift shiftvariation is specified, run the modifier\r\n  if (shiftvariation) {\r\n    var _data$offsets = data.offsets,\r\n        reference = _data$offsets.reference,\r\n        popper = _data$offsets.popper;\r\n\r\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\r\n    var side = isVertical ? 'left' : 'top';\r\n    var measurement = isVertical ? 'width' : 'height';\r\n\r\n    var shiftOffsets = {\r\n      start: defineProperty({}, side, reference[side]),\r\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\r\n    };\r\n\r\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by update method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction hide(data) {\r\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\r\n    return data;\r\n  }\r\n\r\n  var refRect = data.offsets.reference;\r\n  var bound = find(data.instance.modifiers, function (modifier) {\r\n    return modifier.name === 'preventOverflow';\r\n  }).boundaries;\r\n\r\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\r\n    // Avoid unnecessary DOM access if visibility hasn't changed\r\n    if (data.hide === true) {\r\n      return data;\r\n    }\r\n\r\n    data.hide = true;\r\n    data.attributes['x-out-of-boundaries'] = '';\r\n  } else {\r\n    // Avoid unnecessary DOM access if visibility hasn't changed\r\n    if (data.hide === false) {\r\n      return data;\r\n    }\r\n\r\n    data.hide = false;\r\n    data.attributes['x-out-of-boundaries'] = false;\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by `update` method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction inner(data) {\r\n  var placement = data.placement;\r\n  var basePlacement = placement.split('-')[0];\r\n  var _data$offsets = data.offsets,\r\n      popper = _data$offsets.popper,\r\n      reference = _data$offsets.reference;\r\n\r\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\r\n\r\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\r\n\r\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\r\n\r\n  data.placement = getOppositePlacement(placement);\r\n  data.offsets.popper = getClientRect(popper);\r\n\r\n  return data;\r\n}\r\n\r\n/**\r\n * Modifier function, each modifier can have a function of this type assigned\r\n * to its `fn` property.<br />\r\n * These functions will be called on each update, this means that you must\r\n * make sure they are performant enough to avoid performance bottlenecks.\r\n *\r\n * @function ModifierFn\r\n * @argument {dataObject} data - The data object generated by `update` method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {dataObject} The data object, properly modified\r\n */\r\n\r\n/**\r\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\r\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\r\n * needed by the library.\r\n *\r\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\r\n * All the other properties are configurations that could be tweaked.\r\n * @namespace modifiers\r\n */\r\nvar modifiers = {\r\n  /**\r\n   * Modifier used to shift the popper on the start or end of its reference\r\n   * element.<br />\r\n   * It will read the variation of the `placement` property.<br />\r\n   * It can be one either `-end` or `-start`.\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  shift: {\r\n    /** @prop {number} order=100 - Index used to define the order of execution */\r\n    order: 100,\r\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n    enabled: true,\r\n    /** @prop {ModifierFn} */\r\n    fn: shift\r\n  },\r\n\r\n  /**\r\n   * The `offset` modifier can shift your popper on both its axis.\r\n   *\r\n   * It accepts the following units:\r\n   * - `px` or unit-less, interpreted as pixels\r\n   * - `%` or `%r`, percentage relative to the length of the reference element\r\n   * - `%p`, percentage relative to the length of the popper element\r\n   * - `vw`, CSS viewport width unit\r\n   * - `vh`, CSS viewport height unit\r\n   *\r\n   * For length is intended the main axis relative to the placement of the popper.<br />\r\n   * This means that if the placement is `top` or `bottom`, the length will be the\r\n   * `width`. In case of `left` or `right`, it will be the `height`.\r\n   *\r\n   * You can provide a single value (as `Number` or `String`), or a pair of values\r\n   * as `String` divided by a comma or one (or more) white spaces.<br />\r\n   * The latter is a deprecated method because it leads to confusion and will be\r\n   * removed in v2.<br />\r\n   * Additionally, it accepts additions and subtractions between different units.\r\n   * Note that multiplications and divisions aren't supported.\r\n   *\r\n   * Valid examples are:\r\n   * ```\r\n   * 10\r\n   * '10%'\r\n   * '10, 10'\r\n   * '10%, 10'\r\n   * '10 + 10%'\r\n   * '10 - 5vh + 3%'\r\n   * '-10px + 5vh, 5px - 6%'\r\n   * ```\r\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\r\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\r\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\r\n   *\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  offset: {\r\n    /** @prop {number} order=200 - Index used to define the order of execution */\r\n    order: 200,\r\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n    enabled: true,\r\n    /** @prop {ModifierFn} */\r\n    fn: offset,\r\n    /** @prop {Number|String} offset=0\r\n     * The offset value as described in the modifier description\r\n     */\r\n    offset: 0\r\n  },\r\n\r\n  /**\r\n   * Modifier used to prevent the popper from being positioned outside the boundary.\r\n   *\r\n   * A scenario exists where the reference itself is not within the boundaries.<br />\r\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\r\n   * In this case we need to decide whether the popper should either:\r\n   *\r\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\r\n   * - if it should ignore the boundary and \"escape with its reference\"\r\n   *\r\n   * When `escapeWithReference` is set to`true` and reference is completely\r\n   * outside its boundaries, the popper will overflow (or completely leave)\r\n   * the boundaries in order to remain attached to the edge of the reference.\r\n   *\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  preventOverflow: {\r\n    /** @prop {number} order=300 - Index used to define the order of execution */\r\n    order: 300,\r\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n    enabled: true,\r\n    /** @prop {ModifierFn} */\r\n    fn: preventOverflow,\r\n    /**\r\n     * @prop {Array} [priority=['left','right','top','bottom']]\r\n     * Popper will try to prevent overflow following these priorities by default,\r\n     * then, it could overflow on the left and on top of the `boundariesElement`\r\n     */\r\n    priority: ['left', 'right', 'top', 'bottom'],\r\n    /**\r\n     * @prop {number} padding=5\r\n     * Amount of pixel used to define a minimum distance between the boundaries\r\n     * and the popper. This makes sure the popper always has a little padding\r\n     * between the edges of its container\r\n     */\r\n    padding: 5,\r\n    /**\r\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\r\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\r\n     * `viewport` or any DOM element.\r\n     */\r\n    boundariesElement: 'scrollParent'\r\n  },\r\n\r\n  /**\r\n   * Modifier used to make sure the reference and its popper stay near each other\r\n   * without leaving any gap between the two. Especially useful when the arrow is\r\n   * enabled and you want to ensure that it points to its reference element.\r\n   * It cares only about the first axis. You can still have poppers with margin\r\n   * between the popper and its reference element.\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  keepTogether: {\r\n    /** @prop {number} order=400 - Index used to define the order of execution */\r\n    order: 400,\r\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n    enabled: true,\r\n    /** @prop {ModifierFn} */\r\n    fn: keepTogether\r\n  },\r\n\r\n  /**\r\n   * This modifier is used to move the `arrowElement` of the popper to make\r\n   * sure it is positioned between the reference element and its popper element.\r\n   * It will read the outer size of the `arrowElement` node to detect how many\r\n   * pixels of conjunction are needed.\r\n   *\r\n   * It has no effect if no `arrowElement` is provided.\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  arrow: {\r\n    /** @prop {number} order=500 - Index used to define the order of execution */\r\n    order: 500,\r\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n    enabled: true,\r\n    /** @prop {ModifierFn} */\r\n    fn: arrow,\r\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\r\n    element: '[x-arrow]'\r\n  },\r\n\r\n  /**\r\n   * Modifier used to flip the popper's placement when it starts to overlap its\r\n   * reference element.\r\n   *\r\n   * Requires the `preventOverflow` modifier before it in order to work.\r\n   *\r\n   * **NOTE:** this modifier will interrupt the current update cycle and will\r\n   * restart it if it detects the need to flip the placement.\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  flip: {\r\n    /** @prop {number} order=600 - Index used to define the order of execution */\r\n    order: 600,\r\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n    enabled: true,\r\n    /** @prop {ModifierFn} */\r\n    fn: flip,\r\n    /**\r\n     * @prop {String|Array} behavior='flip'\r\n     * The behavior used to change the popper's placement. It can be one of\r\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\r\n     * placements (with optional variations)\r\n     */\r\n    behavior: 'flip',\r\n    /**\r\n     * @prop {number} padding=5\r\n     * The popper will flip if it hits the edges of the `boundariesElement`\r\n     */\r\n    padding: 5,\r\n    /**\r\n     * @prop {String|HTMLElement} boundariesElement='viewport'\r\n     * The element which will define the boundaries of the popper position.\r\n     * The popper will never be placed outside of the defined boundaries\r\n     * (except if `keepTogether` is enabled)\r\n     */\r\n    boundariesElement: 'viewport',\r\n    /**\r\n     * @prop {Boolean} flipVariations=false\r\n     * The popper will switch placement variation between `-start` and `-end` when\r\n     * the reference element overlaps its boundaries.\r\n     *\r\n     * The original placement should have a set variation.\r\n     */\r\n    flipVariations: false,\r\n    /**\r\n     * @prop {Boolean} flipVariationsByContent=false\r\n     * The popper will switch placement variation between `-start` and `-end` when\r\n     * the popper element overlaps its reference boundaries.\r\n     *\r\n     * The original placement should have a set variation.\r\n     */\r\n    flipVariationsByContent: false\r\n  },\r\n\r\n  /**\r\n   * Modifier used to make the popper flow toward the inner of the reference element.\r\n   * By default, when this modifier is disabled, the popper will be placed outside\r\n   * the reference element.\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  inner: {\r\n    /** @prop {number} order=700 - Index used to define the order of execution */\r\n    order: 700,\r\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\r\n    enabled: false,\r\n    /** @prop {ModifierFn} */\r\n    fn: inner\r\n  },\r\n\r\n  /**\r\n   * Modifier used to hide the popper when its reference element is outside of the\r\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\r\n   * be used to hide with a CSS selector the popper when its reference is\r\n   * out of boundaries.\r\n   *\r\n   * Requires the `preventOverflow` modifier before it in order to work.\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  hide: {\r\n    /** @prop {number} order=800 - Index used to define the order of execution */\r\n    order: 800,\r\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n    enabled: true,\r\n    /** @prop {ModifierFn} */\r\n    fn: hide\r\n  },\r\n\r\n  /**\r\n   * Computes the style that will be applied to the popper element to gets\r\n   * properly positioned.\r\n   *\r\n   * Note that this modifier will not touch the DOM, it just prepares the styles\r\n   * so that `applyStyle` modifier can apply it. This separation is useful\r\n   * in case you need to replace `applyStyle` with a custom implementation.\r\n   *\r\n   * This modifier has `850` as `order` value to maintain backward compatibility\r\n   * with previous versions of Popper.js. Expect the modifiers ordering method\r\n   * to change in future major versions of the library.\r\n   *\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  computeStyle: {\r\n    /** @prop {number} order=850 - Index used to define the order of execution */\r\n    order: 850,\r\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n    enabled: true,\r\n    /** @prop {ModifierFn} */\r\n    fn: computeStyle,\r\n    /**\r\n     * @prop {Boolean} gpuAcceleration=true\r\n     * If true, it uses the CSS 3D transformation to position the popper.\r\n     * Otherwise, it will use the `top` and `left` properties\r\n     */\r\n    gpuAcceleration: true,\r\n    /**\r\n     * @prop {string} [x='bottom']\r\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\r\n     * Change this if your popper should grow in a direction different from `bottom`\r\n     */\r\n    x: 'bottom',\r\n    /**\r\n     * @prop {string} [x='left']\r\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\r\n     * Change this if your popper should grow in a direction different from `right`\r\n     */\r\n    y: 'right'\r\n  },\r\n\r\n  /**\r\n   * Applies the computed styles to the popper element.\r\n   *\r\n   * All the DOM manipulations are limited to this modifier. This is useful in case\r\n   * you want to integrate Popper.js inside a framework or view library and you\r\n   * want to delegate all the DOM manipulations to it.\r\n   *\r\n   * Note that if you disable this modifier, you must make sure the popper element\r\n   * has its position set to `absolute` before Popper.js can do its work!\r\n   *\r\n   * Just disable this modifier and define your own to achieve the desired effect.\r\n   *\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  applyStyle: {\r\n    /** @prop {number} order=900 - Index used to define the order of execution */\r\n    order: 900,\r\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n    enabled: true,\r\n    /** @prop {ModifierFn} */\r\n    fn: applyStyle,\r\n    /** @prop {Function} */\r\n    onLoad: applyStyleOnLoad,\r\n    /**\r\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\r\n     * @prop {Boolean} gpuAcceleration=true\r\n     * If true, it uses the CSS 3D transformation to position the popper.\r\n     * Otherwise, it will use the `top` and `left` properties\r\n     */\r\n    gpuAcceleration: undefined\r\n  }\r\n};\r\n\r\n/**\r\n * The `dataObject` is an object containing all the information used by Popper.js.\r\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\r\n * @name dataObject\r\n * @property {Object} data.instance The Popper.js instance\r\n * @property {String} data.placement Placement applied to popper\r\n * @property {String} data.originalPlacement Placement originally defined on init\r\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\r\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\r\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\r\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\r\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\r\n * @property {Object} data.boundaries Offsets of the popper boundaries\r\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\r\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\r\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\r\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\r\n */\r\n\r\n/**\r\n * Default options provided to Popper.js constructor.<br />\r\n * These can be overridden using the `options` argument of Popper.js.<br />\r\n * To override an option, simply pass an object with the same\r\n * structure of the `options` object, as the 3rd argument. For example:\r\n * ```\r\n * new Popper(ref, pop, {\r\n *   modifiers: {\r\n *     preventOverflow: { enabled: false }\r\n *   }\r\n * })\r\n * ```\r\n * @type {Object}\r\n * @static\r\n * @memberof Popper\r\n */\r\nvar Defaults = {\r\n  /**\r\n   * Popper's placement.\r\n   * @prop {Popper.placements} placement='bottom'\r\n   */\r\n  placement: 'bottom',\r\n\r\n  /**\r\n   * Set this to true if you want popper to position it self in 'fixed' mode\r\n   * @prop {Boolean} positionFixed=false\r\n   */\r\n  positionFixed: false,\r\n\r\n  /**\r\n   * Whether events (resize, scroll) are initially enabled.\r\n   * @prop {Boolean} eventsEnabled=true\r\n   */\r\n  eventsEnabled: true,\r\n\r\n  /**\r\n   * Set to true if you want to automatically remove the popper when\r\n   * you call the `destroy` method.\r\n   * @prop {Boolean} removeOnDestroy=false\r\n   */\r\n  removeOnDestroy: false,\r\n\r\n  /**\r\n   * Callback called when the popper is created.<br />\r\n   * By default, it is set to no-op.<br />\r\n   * Access Popper.js instance with `data.instance`.\r\n   * @prop {onCreate}\r\n   */\r\n  onCreate: function onCreate() {},\r\n\r\n  /**\r\n   * Callback called when the popper is updated. This callback is not called\r\n   * on the initialization/creation of the popper, but only on subsequent\r\n   * updates.<br />\r\n   * By default, it is set to no-op.<br />\r\n   * Access Popper.js instance with `data.instance`.\r\n   * @prop {onUpdate}\r\n   */\r\n  onUpdate: function onUpdate() {},\r\n\r\n  /**\r\n   * List of modifiers used to modify the offsets before they are applied to the popper.\r\n   * They provide most of the functionalities of Popper.js.\r\n   * @prop {modifiers}\r\n   */\r\n  modifiers: modifiers\r\n};\r\n\r\n/**\r\n * @callback onCreate\r\n * @param {dataObject} data\r\n */\r\n\r\n/**\r\n * @callback onUpdate\r\n * @param {dataObject} data\r\n */\r\n\r\n// Utils\r\n// Methods\r\nvar Popper = function () {\r\n  /**\r\n   * Creates a new Popper.js instance.\r\n   * @class Popper\r\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\r\n   * @param {Element} popper - The HTML / XML element used as the popper\r\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\r\n   * @return {Object} instance - The generated Popper.js instance\r\n   */\r\n  function Popper(reference, popper) {\r\n    var _this = this;\r\n\r\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n    classCallCheck(this, Popper);\r\n\r\n    this.scheduleUpdate = function () {\r\n      return requestAnimationFrame(_this.update);\r\n    };\r\n\r\n    // make update() debounced, so that it only runs at most once-per-tick\r\n    this.update = debounce(this.update.bind(this));\r\n\r\n    // with {} we create a new object with the options inside it\r\n    this.options = _extends({}, Popper.Defaults, options);\r\n\r\n    // init state\r\n    this.state = {\r\n      isDestroyed: false,\r\n      isCreated: false,\r\n      scrollParents: []\r\n    };\r\n\r\n    // get reference and popper elements (allow jQuery wrappers)\r\n    this.reference = reference && reference.jquery ? reference[0] : reference;\r\n    this.popper = popper && popper.jquery ? popper[0] : popper;\r\n\r\n    // Deep merge modifiers options\r\n    this.options.modifiers = {};\r\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\r\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\r\n    });\r\n\r\n    // Refactoring modifiers' list (Object => Array)\r\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\r\n      return _extends({\r\n        name: name\r\n      }, _this.options.modifiers[name]);\r\n    })\r\n    // sort the modifiers by order\r\n    .sort(function (a, b) {\r\n      return a.order - b.order;\r\n    });\r\n\r\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\r\n    // such code is executed in the same order of its modifier\r\n    // they could add new properties to their options configuration\r\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\r\n    this.modifiers.forEach(function (modifierOptions) {\r\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\r\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\r\n      }\r\n    });\r\n\r\n    // fire the first update to position the popper in the right place\r\n    this.update();\r\n\r\n    var eventsEnabled = this.options.eventsEnabled;\r\n    if (eventsEnabled) {\r\n      // setup event listeners, they will take care of update the position in specific situations\r\n      this.enableEventListeners();\r\n    }\r\n\r\n    this.state.eventsEnabled = eventsEnabled;\r\n  }\r\n\r\n  // We can't use class properties because they don't get listed in the\r\n  // class prototype and break stuff like Sinon stubs\r\n\r\n\r\n  createClass(Popper, [{\r\n    key: 'update',\r\n    value: function update$$1() {\r\n      return update.call(this);\r\n    }\r\n  }, {\r\n    key: 'destroy',\r\n    value: function destroy$$1() {\r\n      return destroy.call(this);\r\n    }\r\n  }, {\r\n    key: 'enableEventListeners',\r\n    value: function enableEventListeners$$1() {\r\n      return enableEventListeners.call(this);\r\n    }\r\n  }, {\r\n    key: 'disableEventListeners',\r\n    value: function disableEventListeners$$1() {\r\n      return disableEventListeners.call(this);\r\n    }\r\n\r\n    /**\r\n     * Schedules an update. It will run on the next UI update available.\r\n     * @method scheduleUpdate\r\n     * @memberof Popper\r\n     */\r\n\r\n\r\n    /**\r\n     * Collection of utilities useful when writing custom modifiers.\r\n     * Starting from version 1.7, this method is available only if you\r\n     * include `popper-utils.js` before `popper.js`.\r\n     *\r\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\r\n     * and will be removed in v2! Use the PopperUtils module directly instead.\r\n     * Due to the high instability of the methods contained in Utils, we can't\r\n     * guarantee them to follow semver. Use them at your own risk!\r\n     * @static\r\n     * @private\r\n     * @type {Object}\r\n     * @deprecated since version 1.8\r\n     * @member Utils\r\n     * @memberof Popper\r\n     */\r\n\r\n  }]);\r\n  return Popper;\r\n}();\r\n\r\n/**\r\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\r\n * and lets you use it as replacement of a real DOM node.<br />\r\n * You can use this method to position a popper relatively to a set of coordinates\r\n * in case you don't have a DOM node to use as reference.\r\n *\r\n * ```\r\n * new Popper(referenceObject, popperNode);\r\n * ```\r\n *\r\n * NB: This feature isn't supported in Internet Explorer 10.\r\n * @name referenceObject\r\n * @property {Function} data.getBoundingClientRect\r\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\r\n * @property {number} data.clientWidth\r\n * An ES6 getter that will return the width of the virtual reference element.\r\n * @property {number} data.clientHeight\r\n * An ES6 getter that will return the height of the virtual reference element.\r\n */\r\n\r\n\r\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\r\nPopper.placements = placements;\r\nPopper.Defaults = Defaults;\r\n\r\nreturn Popper;\r\n\r\n})));\r\n//# sourceMappingURL=popper.js.map"]}